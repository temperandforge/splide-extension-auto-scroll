{"version":3,"file":"splide-extension-auto-scroll.js","sources":["../../node_modules/@splidejs/splide/dist/js/splide.esm.js","../../src/js/extensions/AutoScroll/CustomRequestInterval.ts","../../node_modules/@splidejs/splide/dist/js/utils/splide-utils.esm.js","../../src/js/constants/defaults.ts","../../src/js/constants/i18n.ts","../../src/js/extensions/AutoScroll/AutoScroll.ts","../../src/js/build/default.ts"],"sourcesContent":["function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/*!\n * Splide.js\n * Version  : 4.0.17\n * License  : MIT\n * Copyright: 2022 Naotoshi Fujita\n */\nvar MEDIA_PREFERS_REDUCED_MOTION = \"(prefers-reduced-motion: reduce)\";\nvar CREATED = 1;\nvar MOUNTED = 2;\nvar IDLE = 3;\nvar MOVING = 4;\nvar SCROLLING = 5;\nvar DRAGGING = 6;\nvar DESTROYED = 7;\nvar STATES = {\n  CREATED: CREATED,\n  MOUNTED: MOUNTED,\n  IDLE: IDLE,\n  MOVING: MOVING,\n  SCROLLING: SCROLLING,\n  DRAGGING: DRAGGING,\n  DESTROYED: DESTROYED\n};\n\nfunction empty(array) {\n  array.length = 0;\n}\n\nfunction slice(arrayLike, start, end) {\n  return Array.prototype.slice.call(arrayLike, start, end);\n}\n\nfunction apply(func) {\n  return func.bind.apply(func, [null].concat(slice(arguments, 1)));\n}\n\nvar nextTick = setTimeout;\n\nvar noop = function noop() {};\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n\nfunction typeOf(type, subject) {\n  return typeof subject === type;\n}\n\nfunction isObject(subject) {\n  return !isNull(subject) && typeOf(\"object\", subject);\n}\n\nvar isArray = Array.isArray;\nvar isFunction = apply(typeOf, \"function\");\nvar isString = apply(typeOf, \"string\");\nvar isUndefined = apply(typeOf, \"undefined\");\n\nfunction isNull(subject) {\n  return subject === null;\n}\n\nfunction isHTMLElement(subject) {\n  return subject instanceof HTMLElement;\n}\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n\nfunction push(array, items) {\n  array.push.apply(array, toArray(items));\n  return array;\n}\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, function (name) {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n\nfunction before(nodes, ref) {\n  forEach(nodes, function (node) {\n    var parent = (ref || node).parentNode;\n\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n\nfunction matches(elm, selector) {\n  return isHTMLElement(elm) && (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\n\nfunction children(parent, selector) {\n  var children2 = parent ? slice(parent.children) : [];\n  return selector ? children2.filter(function (child) {\n    return matches(child, selector);\n  }) : children2;\n}\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n\nvar ownKeys = Object.keys;\n\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    var keys = ownKeys(object);\n    keys = right ? keys.reverse() : keys;\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== \"__proto__\") {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n\n  return object;\n}\n\nfunction assign(object) {\n  slice(arguments, 1).forEach(function (source) {\n    forOwn(source, function (value, key) {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n\nfunction merge(object) {\n  slice(arguments, 1).forEach(function (source) {\n    forOwn(source, function (value, key) {\n      if (isArray(value)) {\n        object[key] = value.slice();\n      } else if (isObject(value)) {\n        object[key] = merge({}, isObject(object[key]) ? object[key] : {}, value);\n      } else {\n        object[key] = value;\n      }\n    });\n  });\n  return object;\n}\n\nfunction omit(object, keys) {\n  toArray(keys || ownKeys(object)).forEach(function (key) {\n    delete object[key];\n  });\n}\n\nfunction removeAttribute(elms, attrs) {\n  forEach(elms, function (elm) {\n    forEach(attrs, function (attr) {\n      elm && elm.removeAttribute(attr);\n    });\n  });\n}\n\nfunction setAttribute(elms, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, function (value2, name) {\n      setAttribute(elms, name, value2);\n    });\n  } else {\n    forEach(elms, function (elm) {\n      isNull(value) || value === \"\" ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n    });\n  }\n}\n\nfunction create(tag, attrs, parent) {\n  var elm = document.createElement(tag);\n\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n\n  parent && append(parent, elm);\n  return elm;\n}\n\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n\n  if (!isNull(value)) {\n    elm.style[prop] = \"\" + value;\n  }\n}\n\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\n\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({\n    preventScroll: true\n  });\n}\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n\nfunction remove(nodes) {\n  forEach(nodes, function (node) {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n\nfunction queryAll(parent, selector) {\n  return selector ? slice(parent.querySelectorAll(selector)) : [];\n}\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n\nfunction timeOf(e) {\n  return e.timeStamp;\n}\n\nfunction unit(value) {\n  return isString(value) ? value : value ? value + \"px\" : \"\";\n}\n\nvar PROJECT_CODE = \"splide\";\nvar DATA_ATTRIBUTE = \"data-\" + PROJECT_CODE;\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"[\" + PROJECT_CODE + \"] \" + (message || \"\"));\n  }\n}\n\nvar min = Math.min,\n    max = Math.max,\n    floor = Math.floor,\n    ceil = Math.ceil,\n    abs = Math.abs;\n\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\n\nfunction between(number, minOrMax, maxOrMin, exclusive) {\n  var minimum = min(minOrMax, maxOrMin);\n  var maximum = max(minOrMax, maxOrMin);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\n\nfunction clamp(number, x, y) {\n  var minimum = min(x, y);\n  var maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nfunction camelToKebab(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nfunction format(string, replacements) {\n  forEach(replacements, function (replacement) {\n    string = string.replace(\"%s\", \"\" + replacement);\n  });\n  return string;\n}\n\nfunction pad(number) {\n  return number < 10 ? \"0\" + number : \"\" + number;\n}\n\nvar ids = {};\n\nfunction uniqueId(prefix) {\n  return \"\" + prefix + pad(ids[prefix] = (ids[prefix] || 0) + 1);\n}\n\nfunction EventBinder() {\n  var listeners = [];\n\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, function (target, event, namespace) {\n      var isEventTarget = (\"addEventListener\" in target);\n      var remover = isEventTarget ? target.removeEventListener.bind(target, event, callback, options) : target[\"removeListener\"].bind(target, callback);\n      isEventTarget ? target.addEventListener(event, callback, options) : target[\"addListener\"](callback);\n      listeners.push([target, event, namespace, callback, remover]);\n    });\n  }\n\n  function unbind(targets, events, callback) {\n    forEachEvent(targets, events, function (target, event, namespace) {\n      listeners = listeners.filter(function (listener) {\n        if (listener[0] === target && listener[1] === event && listener[2] === namespace && (!callback || listener[3] === callback)) {\n          listener[4]();\n          return false;\n        }\n\n        return true;\n      });\n    });\n  }\n\n  function dispatch(target, type, detail) {\n    var e;\n    var bubbles = true;\n\n    if (typeof CustomEvent === \"function\") {\n      e = new CustomEvent(type, {\n        bubbles: bubbles,\n        detail: detail\n      });\n    } else {\n      e = document.createEvent(\"CustomEvent\");\n      e.initCustomEvent(type, bubbles, false, detail);\n    }\n\n    target.dispatchEvent(e);\n    return e;\n  }\n\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, function (target) {\n      target && forEach(events, function (events2) {\n        events2.split(\" \").forEach(function (eventNS) {\n          var fragment = eventNS.split(\".\");\n          iteratee(target, fragment[0], fragment[1]);\n        });\n      });\n    });\n  }\n\n  function destroy() {\n    listeners.forEach(function (data) {\n      data[4]();\n    });\n    empty(listeners);\n  }\n\n  return {\n    bind: bind,\n    unbind: unbind,\n    dispatch: dispatch,\n    destroy: destroy\n  };\n}\n\nvar EVENT_MOUNTED = \"mounted\";\nvar EVENT_READY = \"ready\";\nvar EVENT_MOVE = \"move\";\nvar EVENT_MOVED = \"moved\";\nvar EVENT_SHIFTED = \"shifted\";\nvar EVENT_CLICK = \"click\";\nvar EVENT_ACTIVE = \"active\";\nvar EVENT_INACTIVE = \"inactive\";\nvar EVENT_VISIBLE = \"visible\";\nvar EVENT_HIDDEN = \"hidden\";\nvar EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\nvar EVENT_REFRESH = \"refresh\";\nvar EVENT_UPDATED = \"updated\";\nvar EVENT_RESIZE = \"resize\";\nvar EVENT_RESIZED = \"resized\";\nvar EVENT_DRAG = \"drag\";\nvar EVENT_DRAGGING = \"dragging\";\nvar EVENT_DRAGGED = \"dragged\";\nvar EVENT_SCROLL = \"scroll\";\nvar EVENT_SCROLLED = \"scrolled\";\nvar EVENT_DESTROY = \"destroy\";\nvar EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\nvar EVENT_ARROWS_UPDATED = \"arrows:updated\";\nvar EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\nvar EVENT_PAGINATION_UPDATED = \"pagination:updated\";\nvar EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\nvar EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\nvar EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\nvar EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\nvar EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\nfunction EventInterface(Splide2) {\n  var bus = Splide2 ? Splide2.event.bus : document.createDocumentFragment();\n  var binder = EventBinder();\n\n  function on(events, callback) {\n    binder.bind(bus, toArray(events).join(\" \"), function (e) {\n      callback.apply(callback, isArray(e.detail) ? e.detail : []);\n    });\n  }\n\n  function emit(event) {\n    binder.dispatch(bus, event, slice(arguments, 1));\n  }\n\n  if (Splide2) {\n    Splide2.event.on(EVENT_DESTROY, binder.destroy);\n  }\n\n  return assign(binder, {\n    bus: bus,\n    on: on,\n    off: apply(binder.unbind, bus),\n    emit: emit\n  });\n}\n\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  var now = Date.now;\n  var startTime;\n  var rate = 0;\n  var id;\n  var paused = true;\n  var count = 0;\n\n  function update() {\n    if (!paused) {\n      rate = interval ? min((now() - startTime) / interval, 1) : 1;\n      onUpdate && onUpdate(rate);\n\n      if (rate >= 1) {\n        onInterval();\n        startTime = now();\n\n        if (limit && ++count >= limit) {\n          return pause();\n        }\n      }\n\n      raf(update);\n    }\n  }\n\n  function start(resume) {\n    !resume && cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    raf(update);\n  }\n\n  function pause() {\n    paused = true;\n  }\n\n  function rewind() {\n    startTime = now();\n    rate = 0;\n\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n\n  function cancel() {\n    id && cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n\n  function set(time) {\n    interval = time;\n  }\n\n  function isPaused() {\n    return paused;\n  }\n\n  return {\n    start: start,\n    rewind: rewind,\n    pause: pause,\n    cancel: cancel,\n    set: set,\n    isPaused: isPaused\n  };\n}\n\nfunction State(initialState) {\n  var state = initialState;\n\n  function set(value) {\n    state = value;\n  }\n\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n\n  return {\n    set: set,\n    is: is\n  };\n}\n\nfunction Throttle(func, duration) {\n  var interval;\n\n  function throttled() {\n    if (!interval) {\n      interval = RequestInterval(duration || 0, function () {\n        func();\n        interval = null;\n      }, null, 1);\n      interval.start();\n    }\n  }\n\n  return throttled;\n}\n\nfunction Media(Splide2, Components2, options) {\n  var state = Splide2.state;\n  var breakpoints = options.breakpoints || {};\n  var reducedMotion = options.reducedMotion || {};\n  var binder = EventBinder();\n  var queries = [];\n\n  function setup() {\n    var isMin = options.mediaQuery === \"min\";\n    ownKeys(breakpoints).sort(function (n, m) {\n      return isMin ? +n - +m : +m - +n;\n    }).forEach(function (key) {\n      register(breakpoints[key], \"(\" + (isMin ? \"min\" : \"max\") + \"-width:\" + key + \"px)\");\n    });\n    register(reducedMotion, MEDIA_PREFERS_REDUCED_MOTION);\n    update();\n  }\n\n  function destroy(completely) {\n    if (completely) {\n      binder.destroy();\n    }\n  }\n\n  function register(options2, query) {\n    var queryList = matchMedia(query);\n    binder.bind(queryList, \"change\", update);\n    queries.push([options2, queryList]);\n  }\n\n  function update() {\n    var destroyed = state.is(DESTROYED);\n    var direction = options.direction;\n    var merged = queries.reduce(function (merged2, entry) {\n      return merge(merged2, entry[1].matches ? entry[0] : {});\n    }, {});\n    omit(options);\n    set(merged);\n\n    if (options.destroy) {\n      Splide2.destroy(options.destroy === \"completely\");\n    } else if (destroyed) {\n      destroy(true);\n      Splide2.mount();\n    } else {\n      direction !== options.direction && Splide2.refresh();\n    }\n  }\n\n  function reduce(enable) {\n    if (matchMedia(MEDIA_PREFERS_REDUCED_MOTION).matches) {\n      enable ? merge(options, reducedMotion) : omit(options, ownKeys(reducedMotion));\n    }\n  }\n\n  function set(opts, user) {\n    merge(options, opts);\n    user && merge(Object.getPrototypeOf(options), opts);\n\n    if (!state.is(CREATED)) {\n      Splide2.emit(EVENT_UPDATED, options);\n    }\n  }\n\n  return {\n    setup: setup,\n    destroy: destroy,\n    reduce: reduce,\n    set: set\n  };\n}\n\nvar ARROW = \"Arrow\";\nvar ARROW_LEFT = ARROW + \"Left\";\nvar ARROW_RIGHT = ARROW + \"Right\";\nvar ARROW_UP = ARROW + \"Up\";\nvar ARROW_DOWN = ARROW + \"Down\";\nvar LTR = \"ltr\";\nvar RTL = \"rtl\";\nvar TTB = \"ttb\";\nvar ORIENTATION_MAP = {\n  width: [\"height\"],\n  left: [\"top\", \"right\"],\n  right: [\"bottom\", \"left\"],\n  x: [\"y\"],\n  X: [\"Y\"],\n  Y: [\"X\"],\n  ArrowLeft: [ARROW_UP, ARROW_RIGHT],\n  ArrowRight: [ARROW_DOWN, ARROW_LEFT]\n};\n\nfunction Direction(Splide2, Components2, options) {\n  function resolve(prop, axisOnly, direction) {\n    direction = direction || options.direction;\n    var index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop] && ORIENTATION_MAP[prop][index] || prop.replace(/width|left|right/i, function (match, offset) {\n      var replacement = ORIENTATION_MAP[match.toLowerCase()][index] || match;\n      return offset > 0 ? replacement.charAt(0).toUpperCase() + replacement.slice(1) : replacement;\n    });\n  }\n\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n\n  return {\n    resolve: resolve,\n    orient: orient\n  };\n}\n\nvar ROLE = \"role\";\nvar TAB_INDEX = \"tabindex\";\nvar DISABLED = \"disabled\";\nvar ARIA_PREFIX = \"aria-\";\nvar ARIA_CONTROLS = ARIA_PREFIX + \"controls\";\nvar ARIA_CURRENT = ARIA_PREFIX + \"current\";\nvar ARIA_SELECTED = ARIA_PREFIX + \"selected\";\nvar ARIA_LABEL = ARIA_PREFIX + \"label\";\nvar ARIA_LABELLEDBY = ARIA_PREFIX + \"labelledby\";\nvar ARIA_HIDDEN = ARIA_PREFIX + \"hidden\";\nvar ARIA_ORIENTATION = ARIA_PREFIX + \"orientation\";\nvar ARIA_ROLEDESCRIPTION = ARIA_PREFIX + \"roledescription\";\nvar ARIA_LIVE = ARIA_PREFIX + \"live\";\nvar ARIA_BUSY = ARIA_PREFIX + \"busy\";\nvar ARIA_ATOMIC = ARIA_PREFIX + \"atomic\";\nvar ALL_ATTRIBUTES = [ROLE, TAB_INDEX, DISABLED, ARIA_CONTROLS, ARIA_CURRENT, ARIA_LABEL, ARIA_LABELLEDBY, ARIA_HIDDEN, ARIA_ORIENTATION, ARIA_ROLEDESCRIPTION];\nvar CLASS_ROOT = PROJECT_CODE;\nvar CLASS_TRACK = PROJECT_CODE + \"__track\";\nvar CLASS_LIST = PROJECT_CODE + \"__list\";\nvar CLASS_SLIDE = PROJECT_CODE + \"__slide\";\nvar CLASS_CLONE = CLASS_SLIDE + \"--clone\";\nvar CLASS_CONTAINER = CLASS_SLIDE + \"__container\";\nvar CLASS_ARROWS = PROJECT_CODE + \"__arrows\";\nvar CLASS_ARROW = PROJECT_CODE + \"__arrow\";\nvar CLASS_ARROW_PREV = CLASS_ARROW + \"--prev\";\nvar CLASS_ARROW_NEXT = CLASS_ARROW + \"--next\";\nvar CLASS_PAGINATION = PROJECT_CODE + \"__pagination\";\nvar CLASS_PAGINATION_PAGE = CLASS_PAGINATION + \"__page\";\nvar CLASS_PROGRESS = PROJECT_CODE + \"__progress\";\nvar CLASS_PROGRESS_BAR = CLASS_PROGRESS + \"__bar\";\nvar CLASS_TOGGLE = PROJECT_CODE + \"__toggle\";\nvar CLASS_TOGGLE_PLAY = CLASS_TOGGLE + \"__play\";\nvar CLASS_TOGGLE_PAUSE = CLASS_TOGGLE + \"__pause\";\nvar CLASS_SPINNER = PROJECT_CODE + \"__spinner\";\nvar CLASS_SR = PROJECT_CODE + \"__sr\";\nvar CLASS_INITIALIZED = \"is-initialized\";\nvar CLASS_ACTIVE = \"is-active\";\nvar CLASS_PREV = \"is-prev\";\nvar CLASS_NEXT = \"is-next\";\nvar CLASS_VISIBLE = \"is-visible\";\nvar CLASS_LOADING = \"is-loading\";\nvar CLASS_FOCUS_IN = \"is-focus-in\";\nvar STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING, CLASS_FOCUS_IN];\nvar CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\n\nfunction closest(from, selector) {\n  if (isFunction(from.closest)) {\n    return from.closest(selector);\n  }\n\n  var elm = from;\n\n  while (elm && elm.nodeType === 1) {\n    if (matches(elm, selector)) {\n      break;\n    }\n\n    elm = elm.parentElement;\n  }\n\n  return elm;\n}\n\nvar FRICTION = 5;\nvar LOG_INTERVAL = 200;\nvar POINTER_DOWN_EVENTS = \"touchstart mousedown\";\nvar POINTER_MOVE_EVENTS = \"touchmove mousemove\";\nvar POINTER_UP_EVENTS = \"touchend touchcancel mouseup click\";\n\nfunction Elements(Splide2, Components2, options) {\n  var _EventInterface = EventInterface(Splide2),\n      on = _EventInterface.on,\n      bind = _EventInterface.bind;\n\n  var root = Splide2.root;\n  var i18n = options.i18n;\n  var elements = {};\n  var slides = [];\n  var rootClasses = [];\n  var trackClasses = [];\n  var track;\n  var list;\n  var isUsingKey;\n\n  function setup() {\n    collect();\n    init();\n    update();\n  }\n\n  function mount() {\n    on(EVENT_REFRESH, destroy);\n    on(EVENT_REFRESH, setup);\n    on(EVENT_UPDATED, update);\n    bind(document, POINTER_DOWN_EVENTS + \" keydown\", function (e) {\n      isUsingKey = e.type === \"keydown\";\n    }, {\n      capture: true\n    });\n    bind(root, \"focusin\", function () {\n      toggleClass(root, CLASS_FOCUS_IN, !!isUsingKey);\n    });\n  }\n\n  function destroy(completely) {\n    var attrs = ALL_ATTRIBUTES.concat(\"style\");\n    empty(slides);\n    removeClass(root, rootClasses);\n    removeClass(track, trackClasses);\n    removeAttribute([track, list], attrs);\n    removeAttribute(root, completely ? attrs : [\"style\", ARIA_ROLEDESCRIPTION]);\n  }\n\n  function update() {\n    removeClass(root, rootClasses);\n    removeClass(track, trackClasses);\n    rootClasses = getClasses(CLASS_ROOT);\n    trackClasses = getClasses(CLASS_TRACK);\n    addClass(root, rootClasses);\n    addClass(track, trackClasses);\n    setAttribute(root, ARIA_LABEL, options.label);\n    setAttribute(root, ARIA_LABELLEDBY, options.labelledby);\n  }\n\n  function collect() {\n    track = find(\".\" + CLASS_TRACK);\n    list = child(track, \".\" + CLASS_LIST);\n    assert(track && list, \"A track/list element is missing.\");\n    push(slides, children(list, \".\" + CLASS_SLIDE + \":not(.\" + CLASS_CLONE + \")\"));\n    forOwn({\n      arrows: CLASS_ARROWS,\n      pagination: CLASS_PAGINATION,\n      prev: CLASS_ARROW_PREV,\n      next: CLASS_ARROW_NEXT,\n      bar: CLASS_PROGRESS_BAR,\n      toggle: CLASS_TOGGLE\n    }, function (className, key) {\n      elements[key] = find(\".\" + className);\n    });\n    assign(elements, {\n      root: root,\n      track: track,\n      list: list,\n      slides: slides\n    });\n  }\n\n  function init() {\n    var id = root.id || uniqueId(PROJECT_CODE);\n    var role = options.role;\n    root.id = id;\n    track.id = track.id || id + \"-track\";\n    list.id = list.id || id + \"-list\";\n\n    if (!getAttribute(root, ROLE) && root.tagName !== \"SECTION\" && role) {\n      setAttribute(root, ROLE, role);\n    }\n\n    setAttribute(root, ARIA_ROLEDESCRIPTION, i18n.carousel);\n    setAttribute(list, ROLE, \"presentation\");\n  }\n\n  function find(selector) {\n    var elm = query(root, selector);\n    return elm && closest(elm, \".\" + CLASS_ROOT) === root ? elm : void 0;\n  }\n\n  function getClasses(base) {\n    return [base + \"--\" + options.type, base + \"--\" + options.direction, options.drag && base + \"--draggable\", options.isNavigation && base + \"--nav\", base === CLASS_ROOT && CLASS_ACTIVE];\n  }\n\n  return assign(elements, {\n    setup: setup,\n    mount: mount,\n    destroy: destroy\n  });\n}\n\nvar SLIDE = \"slide\";\nvar LOOP = \"loop\";\nvar FADE = \"fade\";\n\nfunction Slide$1(Splide2, index, slideIndex, slide) {\n  var event = EventInterface(Splide2);\n  var on = event.on,\n      emit = event.emit,\n      bind = event.bind;\n  var Components = Splide2.Components,\n      root = Splide2.root,\n      options = Splide2.options;\n  var isNavigation = options.isNavigation,\n      updateOnMove = options.updateOnMove,\n      i18n = options.i18n,\n      pagination = options.pagination,\n      slideFocus = options.slideFocus;\n  var resolve = Components.Direction.resolve;\n  var styles = getAttribute(slide, \"style\");\n  var label = getAttribute(slide, ARIA_LABEL);\n  var isClone = slideIndex > -1;\n  var container = child(slide, \".\" + CLASS_CONTAINER);\n  var destroyed;\n\n  function mount() {\n    if (!isClone) {\n      slide.id = root.id + \"-slide\" + pad(index + 1);\n      setAttribute(slide, ROLE, pagination ? \"tabpanel\" : \"group\");\n      setAttribute(slide, ARIA_ROLEDESCRIPTION, i18n.slide);\n      setAttribute(slide, ARIA_LABEL, label || format(i18n.slideLabel, [index + 1, Splide2.length]));\n    }\n\n    listen();\n  }\n\n  function listen() {\n    bind(slide, \"click\", apply(emit, EVENT_CLICK, self));\n    bind(slide, \"keydown\", apply(emit, EVENT_SLIDE_KEYDOWN, self));\n    on([EVENT_MOVED, EVENT_SHIFTED, EVENT_SCROLLED], update);\n    on(EVENT_NAVIGATION_MOUNTED, initNavigation);\n\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove);\n    }\n  }\n\n  function destroy() {\n    destroyed = true;\n    event.destroy();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n    setAttribute(slide, \"style\", styles);\n    setAttribute(slide, ARIA_LABEL, label || \"\");\n  }\n\n  function initNavigation() {\n    var controls = Splide2.splides.map(function (target) {\n      var Slide2 = target.splide.Components.Slides.getAt(index);\n      return Slide2 ? Slide2.slide.id : \"\";\n    }).join(\" \");\n    setAttribute(slide, ARIA_LABEL, format(i18n.slideX, (isClone ? slideIndex : index) + 1));\n    setAttribute(slide, ARIA_CONTROLS, controls);\n    setAttribute(slide, ROLE, slideFocus ? \"button\" : \"\");\n    slideFocus && removeAttribute(slide, ARIA_ROLEDESCRIPTION);\n  }\n\n  function onMove() {\n    if (!destroyed) {\n      update();\n    }\n  }\n\n  function update() {\n    if (!destroyed) {\n      var curr = Splide2.index;\n      updateActivity();\n      updateVisibility();\n      toggleClass(slide, CLASS_PREV, index === curr - 1);\n      toggleClass(slide, CLASS_NEXT, index === curr + 1);\n    }\n  }\n\n  function updateActivity() {\n    var active = isActive();\n\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n      setAttribute(slide, ARIA_CURRENT, isNavigation && active || \"\");\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, self);\n    }\n  }\n\n  function updateVisibility() {\n    var visible = isVisible();\n    var hidden = !visible && (!isActive() || isClone);\n\n    if (!Splide2.state.is([MOVING, SCROLLING])) {\n      setAttribute(slide, ARIA_HIDDEN, hidden || \"\");\n    }\n\n    setAttribute(queryAll(slide, options.focusableNodes || \"\"), TAB_INDEX, hidden ? -1 : \"\");\n\n    if (slideFocus) {\n      setAttribute(slide, TAB_INDEX, hidden ? -1 : 0);\n    }\n\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, self);\n    }\n\n    if (!visible && document.activeElement === slide) {\n      var Slide2 = Components.Slides.getAt(Splide2.index);\n      Slide2 && focus(Slide2.slide);\n    }\n  }\n\n  function style$1(prop, value, useContainer) {\n    style(useContainer && container || slide, prop, value);\n  }\n\n  function isActive() {\n    var curr = Splide2.index;\n    return curr === index || options.cloneStatus && curr === slideIndex;\n  }\n\n  function isVisible() {\n    if (Splide2.is(FADE)) {\n      return isActive();\n    }\n\n    var trackRect = rect(Components.Elements.track);\n    var slideRect = rect(slide);\n    var left = resolve(\"left\", true);\n    var right = resolve(\"right\", true);\n    return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n  }\n\n  function isWithin(from, distance) {\n    var diff = abs(from - index);\n\n    if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n      diff = min(diff, Splide2.length - diff);\n    }\n\n    return diff <= distance;\n  }\n\n  var self = {\n    index: index,\n    slideIndex: slideIndex,\n    slide: slide,\n    container: container,\n    isClone: isClone,\n    mount: mount,\n    destroy: destroy,\n    update: update,\n    style: style$1,\n    isWithin: isWithin\n  };\n  return self;\n}\n\nfunction Slides(Splide2, Components2, options) {\n  var _EventInterface2 = EventInterface(Splide2),\n      on = _EventInterface2.on,\n      emit = _EventInterface2.emit,\n      bind = _EventInterface2.bind;\n\n  var _Components2$Elements = Components2.Elements,\n      slides = _Components2$Elements.slides,\n      list = _Components2$Elements.list;\n  var Slides2 = [];\n\n  function mount() {\n    init();\n    on(EVENT_REFRESH, destroy);\n    on(EVENT_REFRESH, init);\n  }\n\n  function init() {\n    slides.forEach(function (slide, index) {\n      register(slide, index, -1);\n    });\n  }\n\n  function destroy() {\n    forEach$1(function (Slide2) {\n      Slide2.destroy();\n    });\n    empty(Slides2);\n  }\n\n  function update() {\n    forEach$1(function (Slide2) {\n      Slide2.update();\n    });\n  }\n\n  function register(slide, index, slideIndex) {\n    var object = Slide$1(Splide2, index, slideIndex, slide);\n    object.mount();\n    Slides2.push(object);\n    Slides2.sort(function (Slide1, Slide2) {\n      return Slide1.index - Slide2.index;\n    });\n  }\n\n  function get(excludeClones) {\n    return excludeClones ? filter(function (Slide2) {\n      return !Slide2.isClone;\n    }) : Slides2;\n  }\n\n  function getIn(page) {\n    var Controller = Components2.Controller;\n    var index = Controller.toIndex(page);\n    var max = Controller.hasFocus() ? 1 : options.perPage;\n    return filter(function (Slide2) {\n      return between(Slide2.index, index, index + max - 1);\n    });\n  }\n\n  function getAt(index) {\n    return filter(index)[0];\n  }\n\n  function add(items, index) {\n    forEach(items, function (slide) {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n\n      if (isHTMLElement(slide)) {\n        var ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, apply(emit, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n\n  function remove$1(matcher) {\n    remove(filter(matcher).map(function (Slide2) {\n      return Slide2.slide;\n    }));\n    emit(EVENT_REFRESH);\n  }\n\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n\n  function filter(matcher) {\n    return Slides2.filter(isFunction(matcher) ? matcher : function (Slide2) {\n      return isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index);\n    });\n  }\n\n  function style(prop, value, useContainer) {\n    forEach$1(function (Slide2) {\n      Slide2.style(prop, value, useContainer);\n    });\n  }\n\n  function observeImages(elm, callback) {\n    var images = queryAll(elm, \"img\");\n    var length = images.length;\n\n    if (length) {\n      images.forEach(function (img) {\n        bind(img, \"load error\", function () {\n          if (! --length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides2.length;\n  }\n\n  function isEnough() {\n    return Slides2.length > options.perPage;\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy,\n    update: update,\n    register: register,\n    get: get,\n    getIn: getIn,\n    getAt: getAt,\n    add: add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter: filter,\n    style: style,\n    getLength: getLength,\n    isEnough: isEnough\n  };\n}\n\nfunction Layout(Splide2, Components2, options) {\n  var _EventInterface3 = EventInterface(Splide2),\n      on = _EventInterface3.on,\n      bind = _EventInterface3.bind,\n      emit = _EventInterface3.emit;\n\n  var Slides = Components2.Slides;\n  var resolve = Components2.Direction.resolve;\n  var _Components2$Elements2 = Components2.Elements,\n      root = _Components2$Elements2.root,\n      track = _Components2$Elements2.track,\n      list = _Components2$Elements2.list;\n  var getAt = Slides.getAt,\n      styleSlides = Slides.style;\n  var vertical;\n  var rootRect;\n\n  function mount() {\n    init();\n    bind(window, \"resize load\", Throttle(apply(emit, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n\n  function init() {\n    rootRect = null;\n    vertical = options.direction === TTB;\n    style(root, \"maxWidth\", unit(options.width));\n    style(track, resolve(\"paddingLeft\"), cssPadding(false));\n    style(track, resolve(\"paddingRight\"), cssPadding(true));\n    resize();\n  }\n\n  function resize() {\n    var newRect = rect(root);\n\n    if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n      style(track, \"height\", cssTrackHeight());\n      styleSlides(resolve(\"marginRight\"), unit(options.gap));\n      styleSlides(\"width\", cssSlideWidth());\n      styleSlides(\"height\", cssSlideHeight(), true);\n      rootRect = newRect;\n      emit(EVENT_RESIZED);\n    }\n  }\n\n  function cssPadding(right) {\n    var padding = options.padding;\n    var prop = resolve(right ? \"right\" : \"left\");\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n\n  function cssTrackHeight() {\n    var height = \"\";\n\n    if (vertical) {\n      height = cssHeight();\n      assert(height, \"height or heightRatio is missing.\");\n      height = \"calc(\" + height + \" - \" + cssPadding(false) + \" - \" + cssPadding(true) + \")\";\n    }\n\n    return height;\n  }\n\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n\n  function cssSlideWidth() {\n    return options.autoWidth ? null : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n  }\n\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? null : cssSlideSize() : cssHeight());\n  }\n\n  function cssSlideSize() {\n    var gap = unit(options.gap);\n    return \"calc((100%\" + (gap && \" + \" + gap) + \")/\" + (options.perPage || 1) + (gap && \" - \" + gap) + \")\";\n  }\n\n  function listSize() {\n    return rect(list)[resolve(\"width\")];\n  }\n\n  function slideSize(index, withoutGap) {\n    var Slide = getAt(index || 0);\n    return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n  }\n\n  function totalSize(index, withoutGap) {\n    var Slide = getAt(index);\n\n    if (Slide) {\n      var right = rect(Slide.slide)[resolve(\"right\")];\n      var left = rect(list)[resolve(\"left\")];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n\n    return 0;\n  }\n\n  function sliderSize() {\n    return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n  }\n\n  function getGap() {\n    var Slide = getAt(0);\n    return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n  }\n\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(\"padding\" + (right ? \"Right\" : \"Left\")))) || 0;\n  }\n\n  return {\n    mount: mount,\n    listSize: listSize,\n    slideSize: slideSize,\n    sliderSize: sliderSize,\n    totalSize: totalSize,\n    getPadding: getPadding\n  };\n}\n\nvar MULTIPLIER = 2;\n\nfunction Clones(Splide2, Components2, options) {\n  var _EventInterface4 = EventInterface(Splide2),\n      on = _EventInterface4.on,\n      emit = _EventInterface4.emit;\n\n  var Elements = Components2.Elements,\n      Slides = Components2.Slides;\n  var resolve = Components2.Direction.resolve;\n  var clones = [];\n  var cloneCount;\n\n  function mount() {\n    init();\n    on(EVENT_REFRESH, destroy);\n    on(EVENT_REFRESH, init);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n  }\n\n  function init() {\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n      emit(EVENT_RESIZE);\n    }\n  }\n\n  function destroy() {\n    remove(clones);\n    empty(clones);\n  }\n\n  function observe() {\n    if (cloneCount < computeCloneCount()) {\n      emit(EVENT_REFRESH);\n    }\n  }\n\n  function generate(count) {\n    var slides = Slides.get().slice();\n    var length = slides.length;\n\n    if (length) {\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n\n      push(slides.slice(-count), slides.slice(0, count)).forEach(function (Slide, index) {\n        var isHead = index < count;\n        var clone = cloneDeep(Slide.slide, index);\n        isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n        push(clones, clone);\n        Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n      });\n    }\n  }\n\n  function cloneDeep(elm, index) {\n    var clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = Splide2.root.id + \"-clone\" + pad(index + 1);\n    return clone;\n  }\n\n  function computeCloneCount() {\n    var clones2 = options.clones;\n\n    if (!Splide2.is(LOOP)) {\n      clones2 = 0;\n    } else if (!clones2) {\n      var fixedSize = options[resolve(\"fixedWidth\")] && Components2.Layout.slideSize(0);\n      var fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n      clones2 = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage * MULTIPLIER;\n    }\n\n    return clones2;\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy\n  };\n}\n\nfunction Move(Splide2, Components2, options) {\n  var _EventInterface5 = EventInterface(Splide2),\n      on = _EventInterface5.on,\n      emit = _EventInterface5.emit;\n\n  var set = Splide2.state.set;\n  var _Components2$Layout = Components2.Layout,\n      slideSize = _Components2$Layout.slideSize,\n      getPadding = _Components2$Layout.getPadding,\n      totalSize = _Components2$Layout.totalSize,\n      listSize = _Components2$Layout.listSize,\n      sliderSize = _Components2$Layout.sliderSize;\n  var _Components2$Directio = Components2.Direction,\n      resolve = _Components2$Directio.resolve,\n      orient = _Components2$Directio.orient;\n  var _Components2$Elements3 = Components2.Elements,\n      list = _Components2$Elements3.list,\n      track = _Components2$Elements3.track;\n  var Transition;\n\n  function mount() {\n    Transition = Components2.Transition;\n    on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n\n  function reposition() {\n    if (!Components2.Controller.isBusy()) {\n      Components2.Scroll.cancel();\n      jump(Splide2.index);\n      Components2.Slides.update();\n    }\n  }\n\n  function move(dest, index, prev, callback) {\n    if (dest !== index && canShift(dest > prev)) {\n      cancel();\n      translate(shift(getPosition(), dest > prev), true);\n    }\n\n    set(MOVING);\n    emit(EVENT_MOVE, index, prev, dest);\n    Transition.start(index, function () {\n      set(IDLE);\n      emit(EVENT_MOVED, index, prev, dest);\n      callback && callback();\n    });\n  }\n\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n\n  function translate(position, preventLoop) {\n    if (!Splide2.is(FADE)) {\n      var destination = preventLoop ? position : loop(position);\n      style(list, \"transform\", \"translate\" + resolve(\"X\") + \"(\" + destination + \"px)\");\n      position !== destination && emit(EVENT_SHIFTED);\n    }\n  }\n\n  function loop(position) {\n    if (Splide2.is(LOOP)) {\n      var index = toIndex(position);\n      var exceededMax = index > Components2.Controller.getEnd();\n      var exceededMin = index < 0;\n\n      if (exceededMin || exceededMax) {\n        position = shift(position, exceededMax);\n      }\n    }\n\n    return position;\n  }\n\n  function shift(position, backwards) {\n    var excess = position - getLimit(backwards);\n    var size = sliderSize();\n    position -= orient(size * (ceil(abs(excess) / size) || 1)) * (backwards ? 1 : -1);\n    return position;\n  }\n\n  function cancel() {\n    translate(getPosition());\n    Transition.cancel();\n  }\n\n  function toIndex(position) {\n    var Slides = Components2.Slides.get();\n    var index = 0;\n    var minDistance = Infinity;\n\n    for (var i = 0; i < Slides.length; i++) {\n      var slideIndex = Slides[i].index;\n      var distance = abs(toPosition(slideIndex, true) - position);\n\n      if (distance <= minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  function toPosition(index, trimming) {\n    var position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n\n  function getPosition() {\n    var left = resolve(\"left\");\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n\n  function trim(position) {\n    if (options.trimSpace && Splide2.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize() - listSize()));\n    }\n\n    return position;\n  }\n\n  function offset(index) {\n    var focus = options.focus;\n    return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n  }\n\n  function getLimit(max) {\n    return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n  }\n\n  function canShift(backwards) {\n    var shifted = orient(shift(getPosition(), backwards));\n    return backwards ? shifted >= 0 : shifted <= list[resolve(\"scrollWidth\")] - rect(track)[resolve(\"width\")];\n  }\n\n  function exceededLimit(max, position) {\n    position = isUndefined(position) ? getPosition() : position;\n    var exceededMin = max !== true && orient(position) < orient(getLimit(false));\n    var exceededMax = max !== false && orient(position) > orient(getLimit(true));\n    return exceededMin || exceededMax;\n  }\n\n  return {\n    mount: mount,\n    move: move,\n    jump: jump,\n    translate: translate,\n    shift: shift,\n    cancel: cancel,\n    toIndex: toIndex,\n    toPosition: toPosition,\n    getPosition: getPosition,\n    getLimit: getLimit,\n    exceededLimit: exceededLimit,\n    reposition: reposition\n  };\n}\n\nfunction Controller(Splide2, Components2, options) {\n  var _EventInterface6 = EventInterface(Splide2),\n      on = _EventInterface6.on;\n\n  var Move = Components2.Move;\n  var getPosition = Move.getPosition,\n      getLimit = Move.getLimit,\n      toPosition = Move.toPosition;\n  var _Components2$Slides = Components2.Slides,\n      isEnough = _Components2$Slides.isEnough,\n      getLength = _Components2$Slides.getLength;\n  var isLoop = Splide2.is(LOOP);\n  var isSlide = Splide2.is(SLIDE);\n  var getNext = apply(getAdjacent, false);\n  var getPrev = apply(getAdjacent, true);\n  var currIndex = options.start || 0;\n  var prevIndex = currIndex;\n  var slideCount;\n  var perMove;\n  var perPage;\n\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n  }\n\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n    var index = clamp(currIndex, 0, slideCount - 1);\n\n    if (index !== currIndex) {\n      currIndex = index;\n      Move.reposition();\n    }\n  }\n\n  function go(control, allowSameIndex, callback) {\n    if (!isBusy()) {\n      var dest = parse(control);\n      var index = loop(dest);\n\n      if (index > -1 && (allowSameIndex || index !== currIndex)) {\n        setIndex(index);\n        Move.move(dest, index, prevIndex, callback);\n      }\n    }\n  }\n\n  function scroll(destination, duration, snap, callback) {\n    Components2.Scroll.scroll(destination, duration, snap, function () {\n      setIndex(loop(Move.toIndex(getPosition())));\n      callback && callback();\n    });\n  }\n\n  function parse(control) {\n    var index = currIndex;\n\n    if (isString(control)) {\n      var _ref = control.match(/([+\\-<>])(\\d+)?/) || [],\n          indicator = _ref[1],\n          number = _ref[2];\n\n      if (indicator === \"+\" || indicator === \"-\") {\n        index = computeDestIndex(currIndex + +(\"\" + indicator + (+number || 1)), currIndex);\n      } else if (indicator === \">\") {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === \"<\") {\n        index = getPrev(true);\n      }\n    } else {\n      index = isLoop ? control : clamp(control, 0, getEnd());\n    }\n\n    return index;\n  }\n\n  function getAdjacent(prev, destination) {\n    var number = perMove || (hasFocus() ? 1 : perPage);\n    var dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex, !(perMove || hasFocus()));\n\n    if (dest === -1 && isSlide) {\n      if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n        return prev ? 0 : getEnd();\n      }\n    }\n\n    return destination ? dest : loop(dest);\n  }\n\n  function computeDestIndex(dest, from, snapPage) {\n    if (isEnough() || hasFocus()) {\n      var end = getEnd();\n      var index = computeMovableDestIndex(dest);\n\n      if (index !== dest) {\n        from = dest;\n        dest = index;\n        snapPage = false;\n      }\n\n      if (dest < 0 || dest > end) {\n        if (!perMove && (between(0, dest, from, true) || between(end, from, dest, true))) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = snapPage ? dest < 0 ? -(slideCount % perPage || perPage) : slideCount : dest;\n          } else if (options.rewind) {\n            dest = dest < 0 ? end : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (snapPage && dest !== from) {\n          dest = toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n\n    return dest;\n  }\n\n  function computeMovableDestIndex(dest) {\n    if (isSlide && options.trimSpace === \"move\" && dest !== currIndex) {\n      var position = getPosition();\n\n      while (position === toPosition(dest, true) && between(dest, 0, Splide2.length - 1, !options.rewind)) {\n        dest < currIndex ? --dest : ++dest;\n      }\n    }\n\n    return dest;\n  }\n\n  function loop(index) {\n    return isLoop ? (index + slideCount) % slideCount || 0 : index;\n  }\n\n  function getEnd() {\n    return max(slideCount - (hasFocus() || isLoop && perMove ? 1 : perPage), 0);\n  }\n\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n  }\n\n  function toPage(index) {\n    return hasFocus() ? index : floor((index >= getEnd() ? slideCount - 1 : index) / perPage);\n  }\n\n  function toDest(destination) {\n    var closest = Move.toIndex(destination);\n    return isSlide ? clamp(closest, 0, getEnd()) : closest;\n  }\n\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n\n  function isBusy() {\n    return Splide2.state.is([MOVING, SCROLLING]) && !!options.waitForTransition;\n  }\n\n  return {\n    mount: mount,\n    go: go,\n    scroll: scroll,\n    getNext: getNext,\n    getPrev: getPrev,\n    getAdjacent: getAdjacent,\n    getEnd: getEnd,\n    setIndex: setIndex,\n    getIndex: getIndex,\n    toIndex: toIndex,\n    toPage: toPage,\n    toDest: toDest,\n    hasFocus: hasFocus,\n    isBusy: isBusy\n  };\n}\n\nvar XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\nvar PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\nvar SIZE = 40;\n\nfunction Arrows(Splide2, Components2, options) {\n  var event = EventInterface(Splide2);\n  var on = event.on,\n      bind = event.bind,\n      emit = event.emit;\n  var classes = options.classes,\n      i18n = options.i18n;\n  var Elements = Components2.Elements,\n      Controller = Components2.Controller;\n  var placeholder = Elements.arrows,\n      track = Elements.track;\n  var wrapper = placeholder;\n  var prev = Elements.prev;\n  var next = Elements.next;\n  var created;\n  var wrapperClasses;\n  var arrows = {};\n\n  function mount() {\n    init();\n    on(EVENT_UPDATED, remount);\n  }\n\n  function remount() {\n    destroy();\n    mount();\n  }\n\n  function init() {\n    var enabled = options.arrows;\n\n    if (enabled && !(prev && next)) {\n      createArrows();\n    }\n\n    if (prev && next) {\n      assign(arrows, {\n        prev: prev,\n        next: next\n      });\n      display(wrapper, enabled ? \"\" : \"none\");\n      addClass(wrapper, wrapperClasses = CLASS_ARROWS + \"--\" + options.direction);\n\n      if (enabled) {\n        listen();\n        update();\n        setAttribute([prev, next], ARIA_CONTROLS, track.id);\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      }\n    }\n  }\n\n  function destroy() {\n    event.destroy();\n    removeClass(wrapper, wrapperClasses);\n\n    if (created) {\n      remove(placeholder ? [prev, next] : wrapper);\n      prev = next = null;\n    } else {\n      removeAttribute([prev, next], ALL_ATTRIBUTES);\n    }\n  }\n\n  function listen() {\n    on([EVENT_MOVED, EVENT_REFRESH, EVENT_SCROLLED], update);\n    bind(next, \"click\", apply(go, \">\"));\n    bind(prev, \"click\", apply(go, \"<\"));\n  }\n\n  function go(control) {\n    Controller.go(control, true);\n  }\n\n  function createArrows() {\n    wrapper = placeholder || create(\"div\", classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    !placeholder && before(wrapper, track);\n  }\n\n  function createArrow(prev2) {\n    var arrow = \"<button class=\\\"\" + classes.arrow + \" \" + (prev2 ? classes.prev : classes.next) + \"\\\" type=\\\"button\\\"><svg xmlns=\\\"\" + XML_NAME_SPACE + \"\\\" viewBox=\\\"0 0 \" + SIZE + \" \" + SIZE + \"\\\" width=\\\"\" + SIZE + \"\\\" height=\\\"\" + SIZE + \"\\\" focusable=\\\"false\\\"><path d=\\\"\" + (options.arrowPath || PATH) + \"\\\" />\";\n    return parseHtml(arrow);\n  }\n\n  function update() {\n    var index = Splide2.index;\n    var prevIndex = Controller.getPrev();\n    var nextIndex = Controller.getNext();\n    var prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    var nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    prev.disabled = prevIndex < 0;\n    next.disabled = nextIndex < 0;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n    emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n  }\n\n  return {\n    arrows: arrows,\n    mount: mount,\n    destroy: destroy,\n    update: update\n  };\n}\n\nvar INTERVAL_DATA_ATTRIBUTE = DATA_ATTRIBUTE + \"-interval\";\n\nfunction Autoplay(Splide2, Components2, options) {\n  var _EventInterface7 = EventInterface(Splide2),\n      on = _EventInterface7.on,\n      bind = _EventInterface7.bind,\n      emit = _EventInterface7.emit;\n\n  var interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), onAnimationFrame);\n  var isPaused = interval.isPaused;\n  var Elements = Components2.Elements,\n      _Components2$Elements4 = Components2.Elements,\n      root = _Components2$Elements4.root,\n      toggle = _Components2$Elements4.toggle;\n  var autoplay = options.autoplay;\n  var hovered;\n  var focused;\n  var stopped = autoplay === \"pause\";\n\n  function mount() {\n    if (autoplay) {\n      listen();\n      toggle && setAttribute(toggle, ARIA_CONTROLS, Elements.track.id);\n      stopped || play();\n      update();\n    }\n  }\n\n  function listen() {\n    if (options.pauseOnHover) {\n      bind(root, \"mouseenter mouseleave\", function (e) {\n        hovered = e.type === \"mouseenter\";\n        autoToggle();\n      });\n    }\n\n    if (options.pauseOnFocus) {\n      bind(root, \"focusin focusout\", function (e) {\n        focused = e.type === \"focusin\";\n        autoToggle();\n      });\n    }\n\n    if (toggle) {\n      bind(toggle, \"click\", function () {\n        stopped ? play() : pause(true);\n      });\n    }\n\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n    on(EVENT_MOVE, onMove);\n  }\n\n  function play() {\n    if (isPaused() && Components2.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = hovered = stopped = false;\n      update();\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n\n  function pause(stop) {\n    if (stop === void 0) {\n      stop = true;\n    }\n\n    stopped = !!stop;\n    update();\n\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n  }\n\n  function autoToggle() {\n    if (!stopped) {\n      hovered || focused ? pause(false) : play();\n    }\n  }\n\n  function update() {\n    if (toggle) {\n      toggleClass(toggle, CLASS_ACTIVE, !stopped);\n      setAttribute(toggle, ARIA_LABEL, options.i18n[stopped ? \"play\" : \"pause\"]);\n    }\n  }\n\n  function onAnimationFrame(rate) {\n    var bar = Elements.bar;\n    bar && style(bar, \"width\", rate * 100 + \"%\");\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n  }\n\n  function onMove(index) {\n    var Slide = Components2.Slides.getAt(index);\n    interval.set(Slide && +getAttribute(Slide.slide, INTERVAL_DATA_ATTRIBUTE) || options.interval);\n  }\n\n  return {\n    mount: mount,\n    destroy: interval.cancel,\n    play: play,\n    pause: pause,\n    isPaused: isPaused\n  };\n}\n\nfunction Cover(Splide2, Components2, options) {\n  var _EventInterface8 = EventInterface(Splide2),\n      on = _EventInterface8.on;\n\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, apply(toggle, true));\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply(cover, true));\n    }\n  }\n\n  function cover(cover2) {\n    Components2.Slides.forEach(function (Slide) {\n      var img = child(Slide.container || Slide.slide, \"img\");\n\n      if (img && img.src) {\n        toggle(cover2, img, Slide);\n      }\n    });\n  }\n\n  function toggle(cover2, img, Slide) {\n    Slide.style(\"background\", cover2 ? \"center/cover no-repeat url(\\\"\" + img.src + \"\\\")\" : \"\", true);\n    display(img, cover2 ? \"none\" : \"\");\n  }\n\n  return {\n    mount: mount,\n    destroy: apply(cover, false)\n  };\n}\n\nvar BOUNCE_DIFF_THRESHOLD = 10;\nvar BOUNCE_DURATION = 600;\nvar FRICTION_FACTOR = 0.6;\nvar BASE_VELOCITY = 1.5;\nvar MIN_DURATION = 800;\n\nfunction Scroll(Splide2, Components2, options) {\n  var _EventInterface9 = EventInterface(Splide2),\n      on = _EventInterface9.on,\n      emit = _EventInterface9.emit;\n\n  var set = Splide2.state.set;\n  var Move = Components2.Move;\n  var getPosition = Move.getPosition,\n      getLimit = Move.getLimit,\n      exceededLimit = Move.exceededLimit,\n      translate = Move.translate;\n  var isSlide = Splide2.is(SLIDE);\n  var interval;\n  var callback;\n  var friction = 1;\n\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n\n  function scroll(destination, duration, snap, onScrolled, noConstrain) {\n    var from = getPosition();\n    clear();\n\n    if (snap && (!isSlide || !exceededLimit())) {\n      var size = Components2.Layout.sliderSize();\n      var offset = sign(destination) * size * floor(abs(destination) / size) || 0;\n      destination = Move.toPosition(Components2.Controller.toDest(destination % size)) + offset;\n    }\n\n    var noDistance = approximatelyEqual(from, destination, 1);\n    friction = 1;\n    duration = noDistance ? 0 : duration || max(abs(destination - from) / BASE_VELOCITY, MIN_DURATION);\n    callback = onScrolled;\n    interval = RequestInterval(duration, onEnd, apply(update, from, destination, noConstrain), 1);\n    set(SCROLLING);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n\n  function onEnd() {\n    set(IDLE);\n    callback && callback();\n    emit(EVENT_SCROLLED);\n  }\n\n  function update(from, to, noConstrain, rate) {\n    var position = getPosition();\n    var target = from + (to - from) * easing(rate);\n    var diff = (target - position) * friction;\n    translate(position + diff);\n\n    if (isSlide && !noConstrain && exceededLimit()) {\n      friction *= FRICTION_FACTOR;\n\n      if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n        scroll(getLimit(exceededLimit(true)), BOUNCE_DURATION, false, callback, true);\n      }\n    }\n  }\n\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onEnd();\n    }\n  }\n\n  function easing(t) {\n    var easingFunc = options.easingFunc;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n\n  return {\n    mount: mount,\n    destroy: clear,\n    scroll: scroll,\n    cancel: cancel\n  };\n}\n\nvar SCROLL_LISTENER_OPTIONS = {\n  passive: false,\n  capture: true\n};\n\nfunction Drag(Splide2, Components2, options) {\n  var _EventInterface10 = EventInterface(Splide2),\n      on = _EventInterface10.on,\n      emit = _EventInterface10.emit,\n      bind = _EventInterface10.bind,\n      unbind = _EventInterface10.unbind;\n\n  var state = Splide2.state;\n  var Move = Components2.Move,\n      Scroll = Components2.Scroll,\n      Controller = Components2.Controller,\n      track = Components2.Elements.track,\n      reduce = Components2.Media.reduce;\n  var _Components2$Directio2 = Components2.Direction,\n      resolve = _Components2$Directio2.resolve,\n      orient = _Components2$Directio2.orient;\n  var getPosition = Move.getPosition,\n      exceededLimit = Move.exceededLimit;\n  var basePosition;\n  var baseEvent;\n  var prevBaseEvent;\n  var isFree;\n  var dragging;\n  var exceeded = false;\n  var clickPrevented;\n  var disabled;\n  var target;\n\n  function mount() {\n    bind(track, POINTER_MOVE_EVENTS, noop, SCROLL_LISTENER_OPTIONS);\n    bind(track, POINTER_UP_EVENTS, noop, SCROLL_LISTENER_OPTIONS);\n    bind(track, POINTER_DOWN_EVENTS, onPointerDown, SCROLL_LISTENER_OPTIONS);\n    bind(track, \"click\", onClick, {\n      capture: true\n    });\n    bind(track, \"dragstart\", prevent);\n    on([EVENT_MOUNTED, EVENT_UPDATED], init);\n  }\n\n  function init() {\n    var drag = options.drag;\n    disable(!drag);\n    isFree = drag === \"free\";\n  }\n\n  function onPointerDown(e) {\n    clickPrevented = false;\n\n    if (!disabled) {\n      var isTouch = isTouchEvent(e);\n\n      if (isDraggable(e.target) && (isTouch || !e.button)) {\n        if (!Controller.isBusy()) {\n          target = isTouch ? track : window;\n          dragging = state.is([MOVING, SCROLLING]);\n          prevBaseEvent = null;\n          bind(target, POINTER_MOVE_EVENTS, onPointerMove, SCROLL_LISTENER_OPTIONS);\n          bind(target, POINTER_UP_EVENTS, onPointerUp, SCROLL_LISTENER_OPTIONS);\n          Move.cancel();\n          Scroll.cancel();\n          save(e);\n        } else {\n          prevent(e, true);\n        }\n      }\n    }\n  }\n\n  function onPointerMove(e) {\n    if (!state.is(DRAGGING)) {\n      state.set(DRAGGING);\n      emit(EVENT_DRAG);\n    }\n\n    if (e.cancelable) {\n      if (dragging) {\n        Move.translate(basePosition + constrain(diffCoord(e)));\n        var expired = diffTime(e) > LOG_INTERVAL;\n        var hasExceeded = exceeded !== (exceeded = exceededLimit());\n\n        if (expired || hasExceeded) {\n          save(e);\n        }\n\n        clickPrevented = true;\n        emit(EVENT_DRAGGING);\n        prevent(e);\n      } else if (isSliderDirection(e)) {\n        dragging = shouldStart(e);\n        prevent(e);\n      }\n    }\n  }\n\n  function onPointerUp(e) {\n    if (state.is(DRAGGING)) {\n      state.set(IDLE);\n      emit(EVENT_DRAGGED);\n    }\n\n    if (dragging) {\n      move(e);\n      prevent(e);\n    }\n\n    unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n    unbind(target, POINTER_UP_EVENTS, onPointerUp);\n    dragging = false;\n  }\n\n  function onClick(e) {\n    if (!disabled && clickPrevented) {\n      prevent(e, true);\n    }\n  }\n\n  function save(e) {\n    prevBaseEvent = baseEvent;\n    baseEvent = e;\n    basePosition = getPosition();\n  }\n\n  function move(e) {\n    var velocity = computeVelocity(e);\n    var destination = computeDestination(velocity);\n    var rewind = options.rewind && options.rewindByDrag;\n    reduce(false);\n\n    if (isFree) {\n      Controller.scroll(destination, 0, options.snap);\n    } else if (Splide2.is(FADE)) {\n      Controller.go(orient(sign(velocity)) < 0 ? rewind ? \"<\" : \"-\" : rewind ? \">\" : \"+\");\n    } else if (Splide2.is(SLIDE) && exceeded && rewind) {\n      Controller.go(exceededLimit(true) ? \">\" : \"<\");\n    } else {\n      Controller.go(Controller.toDest(destination), true);\n    }\n\n    reduce(true);\n  }\n\n  function shouldStart(e) {\n    var thresholds = options.dragMinThreshold;\n    var isObj = isObject(thresholds);\n    var mouse = isObj && thresholds.mouse || 0;\n    var touch = (isObj ? thresholds.touch : +thresholds) || 10;\n    return abs(diffCoord(e)) > (isTouchEvent(e) ? touch : mouse);\n  }\n\n  function isSliderDirection(e) {\n    return abs(diffCoord(e)) > abs(diffCoord(e, true));\n  }\n\n  function computeVelocity(e) {\n    if (Splide2.is(LOOP) || !exceeded) {\n      var time = diffTime(e);\n\n      if (time && time < LOG_INTERVAL) {\n        return diffCoord(e) / time;\n      }\n    }\n\n    return 0;\n  }\n\n  function computeDestination(velocity) {\n    return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n  }\n\n  function diffCoord(e, orthogonal) {\n    return coordOf(e, orthogonal) - coordOf(getBaseEvent(e), orthogonal);\n  }\n\n  function diffTime(e) {\n    return timeOf(e) - timeOf(getBaseEvent(e));\n  }\n\n  function getBaseEvent(e) {\n    return baseEvent === e && prevBaseEvent || baseEvent;\n  }\n\n  function coordOf(e, orthogonal) {\n    return (isTouchEvent(e) ? e.changedTouches[0] : e)[\"page\" + resolve(orthogonal ? \"Y\" : \"X\")];\n  }\n\n  function constrain(diff) {\n    return diff / (exceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n  }\n\n  function isDraggable(target2) {\n    var noDrag = options.noDrag;\n    return !matches(target2, \".\" + CLASS_PAGINATION_PAGE + \", .\" + CLASS_ARROW) && (!noDrag || !matches(target2, noDrag));\n  }\n\n  function isTouchEvent(e) {\n    return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n  }\n\n  function isDragging() {\n    return dragging;\n  }\n\n  function disable(value) {\n    disabled = value;\n  }\n\n  return {\n    mount: mount,\n    disable: disable,\n    isDragging: isDragging\n  };\n}\n\nvar NORMALIZATION_MAP = {\n  Spacebar: \" \",\n  Right: ARROW_RIGHT,\n  Left: ARROW_LEFT,\n  Up: ARROW_UP,\n  Down: ARROW_DOWN\n};\n\nfunction normalizeKey(key) {\n  key = isString(key) ? key : key.key;\n  return NORMALIZATION_MAP[key] || key;\n}\n\nvar KEYBOARD_EVENT = \"keydown\";\n\nfunction Keyboard(Splide2, Components2, options) {\n  var _EventInterface11 = EventInterface(Splide2),\n      on = _EventInterface11.on,\n      bind = _EventInterface11.bind,\n      unbind = _EventInterface11.unbind;\n\n  var root = Splide2.root;\n  var resolve = Components2.Direction.resolve;\n  var target;\n  var disabled;\n\n  function mount() {\n    init();\n    on(EVENT_UPDATED, destroy);\n    on(EVENT_UPDATED, init);\n    on(EVENT_MOVE, onMove);\n  }\n\n  function init() {\n    var keyboard = options.keyboard;\n\n    if (keyboard) {\n      target = keyboard === \"global\" ? window : root;\n      bind(target, KEYBOARD_EVENT, onKeydown);\n    }\n  }\n\n  function destroy() {\n    unbind(target, KEYBOARD_EVENT);\n  }\n\n  function disable(value) {\n    disabled = value;\n  }\n\n  function onMove() {\n    var _disabled = disabled;\n    disabled = true;\n    nextTick(function () {\n      disabled = _disabled;\n    });\n  }\n\n  function onKeydown(e) {\n    if (!disabled) {\n      var key = normalizeKey(e);\n\n      if (key === resolve(ARROW_LEFT)) {\n        Splide2.go(\"<\");\n      } else if (key === resolve(ARROW_RIGHT)) {\n        Splide2.go(\">\");\n      }\n    }\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy,\n    disable: disable\n  };\n}\n\nvar SRC_DATA_ATTRIBUTE = DATA_ATTRIBUTE + \"-lazy\";\nvar SRCSET_DATA_ATTRIBUTE = SRC_DATA_ATTRIBUTE + \"-srcset\";\nvar IMAGE_SELECTOR = \"[\" + SRC_DATA_ATTRIBUTE + \"], [\" + SRCSET_DATA_ATTRIBUTE + \"]\";\n\nfunction LazyLoad(Splide2, Components2, options) {\n  var _EventInterface12 = EventInterface(Splide2),\n      on = _EventInterface12.on,\n      off = _EventInterface12.off,\n      bind = _EventInterface12.bind,\n      emit = _EventInterface12.emit;\n\n  var isSequential = options.lazyLoad === \"sequential\";\n  var events = [EVENT_MOVED, EVENT_SCROLLED];\n  var entries = [];\n\n  function mount() {\n    if (options.lazyLoad) {\n      init();\n      on(EVENT_REFRESH, init);\n    }\n  }\n\n  function init() {\n    empty(entries);\n    register();\n\n    if (isSequential) {\n      loadNext();\n    } else {\n      off(events);\n      on(events, check);\n      check();\n    }\n  }\n\n  function register() {\n    Components2.Slides.forEach(function (Slide) {\n      queryAll(Slide.slide, IMAGE_SELECTOR).forEach(function (img) {\n        var src = getAttribute(img, SRC_DATA_ATTRIBUTE);\n        var srcset = getAttribute(img, SRCSET_DATA_ATTRIBUTE);\n\n        if (src !== img.src || srcset !== img.srcset) {\n          var className = options.classes.spinner;\n          var parent = img.parentElement;\n          var spinner = child(parent, \".\" + className) || create(\"span\", className, parent);\n          entries.push([img, Slide, spinner]);\n          img.src || display(img, \"none\");\n        }\n      });\n    });\n  }\n\n  function check() {\n    entries = entries.filter(function (data) {\n      var distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n      return data[1].isWithin(Splide2.index, distance) ? load(data) : true;\n    });\n    entries.length || off(events);\n  }\n\n  function load(data) {\n    var img = data[0];\n    addClass(data[1].slide, CLASS_LOADING);\n    bind(img, \"load error\", apply(onLoad, data));\n    setAttribute(img, \"src\", getAttribute(img, SRC_DATA_ATTRIBUTE));\n    setAttribute(img, \"srcset\", getAttribute(img, SRCSET_DATA_ATTRIBUTE));\n    removeAttribute(img, SRC_DATA_ATTRIBUTE);\n    removeAttribute(img, SRCSET_DATA_ATTRIBUTE);\n  }\n\n  function onLoad(data, e) {\n    var img = data[0],\n        Slide = data[1];\n    removeClass(Slide.slide, CLASS_LOADING);\n\n    if (e.type !== \"error\") {\n      remove(data[2]);\n      display(img, \"\");\n      emit(EVENT_LAZYLOAD_LOADED, img, Slide);\n      emit(EVENT_RESIZE);\n    }\n\n    isSequential && loadNext();\n  }\n\n  function loadNext() {\n    entries.length && load(entries.shift());\n  }\n\n  return {\n    mount: mount,\n    destroy: apply(empty, entries),\n    check: check\n  };\n}\n\nfunction Pagination(Splide2, Components2, options) {\n  var event = EventInterface(Splide2);\n  var on = event.on,\n      emit = event.emit,\n      bind = event.bind;\n  var Slides = Components2.Slides,\n      Elements = Components2.Elements,\n      Controller = Components2.Controller;\n  var hasFocus = Controller.hasFocus,\n      getIndex = Controller.getIndex,\n      go = Controller.go;\n  var resolve = Components2.Direction.resolve;\n  var placeholder = Elements.pagination;\n  var items = [];\n  var list;\n  var paginationClasses;\n\n  function mount() {\n    destroy();\n    on([EVENT_UPDATED, EVENT_REFRESH], mount);\n    var enabled = options.pagination && Slides.isEnough();\n    placeholder && display(placeholder, enabled ? \"\" : \"none\");\n\n    if (enabled) {\n      on([EVENT_MOVE, EVENT_SCROLL, EVENT_SCROLLED], update);\n      createPagination();\n      update();\n      emit(EVENT_PAGINATION_MOUNTED, {\n        list: list,\n        items: items\n      }, getAt(Splide2.index));\n    }\n  }\n\n  function destroy() {\n    if (list) {\n      remove(placeholder ? slice(list.children) : list);\n      removeClass(list, paginationClasses);\n      empty(items);\n      list = null;\n    }\n\n    event.destroy();\n  }\n\n  function createPagination() {\n    var length = Splide2.length;\n    var classes = options.classes,\n        i18n = options.i18n,\n        perPage = options.perPage;\n    var max = hasFocus() ? length : ceil(length / perPage);\n    list = placeholder || create(\"ul\", classes.pagination, Elements.track.parentElement);\n    addClass(list, paginationClasses = CLASS_PAGINATION + \"--\" + getDirection());\n    setAttribute(list, ROLE, \"tablist\");\n    setAttribute(list, ARIA_LABEL, i18n.select);\n    setAttribute(list, ARIA_ORIENTATION, getDirection() === TTB ? \"vertical\" : \"\");\n\n    for (var i = 0; i < max; i++) {\n      var li = create(\"li\", null, list);\n      var button = create(\"button\", {\n        class: classes.page,\n        type: \"button\"\n      }, li);\n      var controls = Slides.getIn(i).map(function (Slide) {\n        return Slide.slide.id;\n      });\n      var text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, \"click\", apply(onClick, i));\n\n      if (options.paginationKeyboard) {\n        bind(button, \"keydown\", apply(onKeydown, i));\n      }\n\n      setAttribute(li, ROLE, \"presentation\");\n      setAttribute(button, ROLE, \"tab\");\n      setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      setAttribute(button, TAB_INDEX, -1);\n      items.push({\n        li: li,\n        button: button,\n        page: i\n      });\n    }\n  }\n\n  function onClick(page) {\n    go(\">\" + page, true);\n  }\n\n  function onKeydown(page, e) {\n    var length = items.length;\n    var key = normalizeKey(e);\n    var dir = getDirection();\n    var nextPage = -1;\n\n    if (key === resolve(ARROW_RIGHT, false, dir)) {\n      nextPage = ++page % length;\n    } else if (key === resolve(ARROW_LEFT, false, dir)) {\n      nextPage = (--page + length) % length;\n    } else if (key === \"Home\") {\n      nextPage = 0;\n    } else if (key === \"End\") {\n      nextPage = length - 1;\n    }\n\n    var item = items[nextPage];\n\n    if (item) {\n      focus(item.button);\n      go(\">\" + nextPage);\n      prevent(e, true);\n    }\n  }\n\n  function getDirection() {\n    return options.paginationDirection || options.direction;\n  }\n\n  function getAt(index) {\n    return items[Controller.toPage(index)];\n  }\n\n  function update() {\n    var prev = getAt(getIndex(true));\n    var curr = getAt(getIndex());\n\n    if (prev) {\n      var button = prev.button;\n      removeClass(button, CLASS_ACTIVE);\n      removeAttribute(button, ARIA_SELECTED);\n      setAttribute(button, TAB_INDEX, -1);\n    }\n\n    if (curr) {\n      var _button = curr.button;\n      addClass(_button, CLASS_ACTIVE);\n      setAttribute(_button, ARIA_SELECTED, true);\n      setAttribute(_button, TAB_INDEX, \"\");\n    }\n\n    emit(EVENT_PAGINATION_UPDATED, {\n      list: list,\n      items: items\n    }, prev, curr);\n  }\n\n  return {\n    items: items,\n    mount: mount,\n    destroy: destroy,\n    getAt: getAt,\n    update: update\n  };\n}\n\nvar TRIGGER_KEYS = [\" \", \"Enter\"];\n\nfunction Sync(Splide2, Components2, options) {\n  var isNavigation = options.isNavigation,\n      slideFocus = options.slideFocus;\n  var events = [];\n\n  function setup() {\n    Splide2.options = {\n      slideFocus: isUndefined(slideFocus) ? isNavigation : slideFocus\n    };\n  }\n\n  function mount() {\n    Splide2.splides.forEach(function (target) {\n      if (!target.isParent) {\n        sync(Splide2, target.splide);\n        sync(target.splide, Splide2);\n      }\n    });\n\n    if (isNavigation) {\n      navigate();\n    }\n  }\n\n  function destroy() {\n    events.forEach(function (event) {\n      event.destroy();\n    });\n    empty(events);\n  }\n\n  function remount() {\n    destroy();\n    mount();\n  }\n\n  function sync(splide, target) {\n    var event = EventInterface(splide);\n    event.on(EVENT_MOVE, function (index, prev, dest) {\n      target.go(target.is(LOOP) ? dest : index);\n    });\n    events.push(event);\n  }\n\n  function navigate() {\n    var event = EventInterface(Splide2);\n    var on = event.on;\n    on(EVENT_CLICK, onClick);\n    on(EVENT_SLIDE_KEYDOWN, onKeydown);\n    on([EVENT_MOUNTED, EVENT_UPDATED], update);\n    events.push(event);\n    event.emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n  }\n\n  function update() {\n    setAttribute(Components2.Elements.list, ARIA_ORIENTATION, options.direction === TTB ? \"vertical\" : \"\");\n  }\n\n  function onClick(Slide) {\n    Splide2.go(Slide.index);\n  }\n\n  function onKeydown(Slide, e) {\n    if (includes(TRIGGER_KEYS, normalizeKey(e))) {\n      onClick(Slide);\n      prevent(e);\n    }\n  }\n\n  return {\n    setup: setup,\n    mount: mount,\n    destroy: destroy,\n    remount: remount\n  };\n}\n\nfunction Wheel(Splide2, Components2, options) {\n  var _EventInterface13 = EventInterface(Splide2),\n      bind = _EventInterface13.bind;\n\n  var lastTime = 0;\n\n  function mount() {\n    if (options.wheel) {\n      bind(Components2.Elements.track, \"wheel\", onWheel, SCROLL_LISTENER_OPTIONS);\n    }\n  }\n\n  function onWheel(e) {\n    if (e.cancelable) {\n      var deltaY = e.deltaY;\n      var backwards = deltaY < 0;\n      var timeStamp = timeOf(e);\n\n      var _min = options.wheelMinThreshold || 0;\n\n      var sleep = options.wheelSleep || 0;\n\n      if (abs(deltaY) > _min && timeStamp - lastTime > sleep) {\n        Splide2.go(backwards ? \"<\" : \">\");\n        lastTime = timeStamp;\n      }\n\n      shouldPrevent(backwards) && prevent(e);\n    }\n  }\n\n  function shouldPrevent(backwards) {\n    return !options.releaseWheel || Splide2.state.is(MOVING) || Components2.Controller.getAdjacent(backwards) !== -1;\n  }\n\n  return {\n    mount: mount\n  };\n}\n\nvar SR_REMOVAL_DELAY = 90;\n\nfunction Live(Splide2, Components2, options) {\n  var _EventInterface14 = EventInterface(Splide2),\n      on = _EventInterface14.on;\n\n  var track = Components2.Elements.track;\n  var enabled = options.live && !options.isNavigation;\n  var sr = create(\"span\", CLASS_SR);\n  var interval = RequestInterval(SR_REMOVAL_DELAY, apply(toggle, false));\n\n  function mount() {\n    if (enabled) {\n      disable(!Components2.Autoplay.isPaused());\n      setAttribute(track, ARIA_ATOMIC, true);\n      sr.textContent = \"\\u2026\";\n      on(EVENT_AUTOPLAY_PLAY, apply(disable, true));\n      on(EVENT_AUTOPLAY_PAUSE, apply(disable, false));\n      on([EVENT_MOVED, EVENT_SCROLLED], apply(toggle, true));\n    }\n  }\n\n  function toggle(active) {\n    setAttribute(track, ARIA_BUSY, active);\n\n    if (active) {\n      append(track, sr);\n      interval.start();\n    } else {\n      remove(sr);\n    }\n  }\n\n  function destroy() {\n    removeAttribute(track, [ARIA_LIVE, ARIA_ATOMIC, ARIA_BUSY]);\n    remove(sr);\n  }\n\n  function disable(disabled) {\n    if (enabled) {\n      setAttribute(track, ARIA_LIVE, disabled ? \"off\" : \"polite\");\n    }\n  }\n\n  return {\n    mount: mount,\n    disable: disable,\n    destroy: destroy\n  };\n}\n\nvar ComponentConstructors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Media: Media,\n  Direction: Direction,\n  Elements: Elements,\n  Slides: Slides,\n  Layout: Layout,\n  Clones: Clones,\n  Move: Move,\n  Controller: Controller,\n  Arrows: Arrows,\n  Autoplay: Autoplay,\n  Cover: Cover,\n  Scroll: Scroll,\n  Drag: Drag,\n  Keyboard: Keyboard,\n  LazyLoad: LazyLoad,\n  Pagination: Pagination,\n  Sync: Sync,\n  Wheel: Wheel,\n  Live: Live\n});\nvar I18N = {\n  prev: \"Previous slide\",\n  next: \"Next slide\",\n  first: \"Go to first slide\",\n  last: \"Go to last slide\",\n  slideX: \"Go to slide %s\",\n  pageX: \"Go to page %s\",\n  play: \"Start autoplay\",\n  pause: \"Pause autoplay\",\n  carousel: \"carousel\",\n  slide: \"slide\",\n  select: \"Select a slide to show\",\n  slideLabel: \"%s of %s\"\n};\nvar DEFAULTS = {\n  type: \"slide\",\n  role: \"region\",\n  speed: 400,\n  perPage: 1,\n  cloneStatus: true,\n  arrows: true,\n  pagination: true,\n  paginationKeyboard: true,\n  interval: 5e3,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n  drag: true,\n  direction: \"ltr\",\n  trimSpace: true,\n  focusableNodes: \"a, button, textarea, input, select, iframe\",\n  live: true,\n  classes: CLASSES,\n  i18n: I18N,\n  reducedMotion: {\n    speed: 0,\n    rewindSpeed: 0,\n    autoplay: \"pause\"\n  }\n};\n\nfunction Fade(Splide2, Components2, options) {\n  var _EventInterface15 = EventInterface(Splide2),\n      on = _EventInterface15.on;\n\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_REFRESH], function () {\n      nextTick(function () {\n        Components2.Slides.style(\"transition\", \"opacity \" + options.speed + \"ms \" + options.easing);\n      });\n    });\n  }\n\n  function start(index, done) {\n    var track = Components2.Elements.track;\n    style(track, \"height\", unit(rect(track).height));\n    nextTick(function () {\n      done();\n      style(track, \"height\", \"\");\n    });\n  }\n\n  return {\n    mount: mount,\n    start: start,\n    cancel: noop\n  };\n}\n\nfunction Slide(Splide2, Components2, options) {\n  var _EventInterface16 = EventInterface(Splide2),\n      bind = _EventInterface16.bind;\n\n  var Move = Components2.Move,\n      Controller = Components2.Controller,\n      Scroll = Components2.Scroll;\n  var list = Components2.Elements.list;\n  var transition = apply(style, list, \"transition\");\n  var endCallback;\n\n  function mount() {\n    bind(list, \"transitionend\", function (e) {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n\n  function start(index, done) {\n    var destination = Move.toPosition(index, true);\n    var position = Move.getPosition();\n    var speed = getSpeed(index);\n\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      if (options.useScroll) {\n        Scroll.scroll(destination, speed, false, done);\n      } else {\n        transition(\"transform \" + speed + \"ms \" + options.easing);\n        Move.translate(destination, true);\n        endCallback = done;\n      }\n    } else {\n      Move.jump(index);\n      done();\n    }\n  }\n\n  function cancel() {\n    transition(\"\");\n    Scroll.cancel();\n  }\n\n  function getSpeed(index) {\n    var rewindSpeed = options.rewindSpeed;\n\n    if (Splide2.is(SLIDE) && rewindSpeed) {\n      var prev = Controller.getIndex(true);\n      var end = Controller.getEnd();\n\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n\n    return options.speed;\n  }\n\n  return {\n    mount: mount,\n    start: start,\n    cancel: cancel\n  };\n}\n\nvar _Splide = /*#__PURE__*/function () {\n  function _Splide(target, options) {\n    this.event = EventInterface();\n    this.Components = {};\n    this.state = State(CREATED);\n    this.splides = [];\n    this._o = {};\n    this._E = {};\n    var root = isString(target) ? query(document, target) : target;\n    assert(root, root + \" is invalid.\");\n    this.root = root;\n    options = merge({\n      label: getAttribute(root, ARIA_LABEL) || \"\",\n      labelledby: getAttribute(root, ARIA_LABELLEDBY) || \"\"\n    }, DEFAULTS, _Splide.defaults, options || {});\n\n    try {\n      merge(options, JSON.parse(getAttribute(root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, \"Invalid JSON\");\n    }\n\n    this._o = Object.create(merge({}, options));\n  }\n\n  var _proto = _Splide.prototype;\n\n  _proto.mount = function mount(Extensions, Transition) {\n    var _this = this;\n\n    var state = this.state,\n        Components2 = this.Components;\n    assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n    state.set(CREATED);\n    this._C = Components2;\n    this._T = Transition || this._T || (this.is(FADE) ? Fade : Slide);\n    this._E = Extensions || this._E;\n    var Constructors = assign({}, ComponentConstructors, this._E, {\n      Transition: this._T\n    });\n    forOwn(Constructors, function (Component, key) {\n      var component = Component(_this, Components2, _this._o);\n      Components2[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components2, function (component) {\n      component.mount && component.mount();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  };\n\n  _proto.sync = function sync(splide) {\n    this.splides.push({\n      splide: splide\n    });\n    splide.splides.push({\n      splide: this,\n      isParent: true\n    });\n\n    if (this.state.is(IDLE)) {\n      this._C.Sync.remount();\n\n      splide.Components.Sync.remount();\n    }\n\n    return this;\n  };\n\n  _proto.go = function go(control) {\n    this._C.Controller.go(control);\n\n    return this;\n  };\n\n  _proto.on = function on(events, callback) {\n    this.event.on(events, callback);\n    return this;\n  };\n\n  _proto.off = function off(events) {\n    this.event.off(events);\n    return this;\n  };\n\n  _proto.emit = function emit(event) {\n    var _this$event;\n\n    (_this$event = this.event).emit.apply(_this$event, [event].concat(slice(arguments, 1)));\n\n    return this;\n  };\n\n  _proto.add = function add(slides, index) {\n    this._C.Slides.add(slides, index);\n\n    return this;\n  };\n\n  _proto.remove = function remove(matcher) {\n    this._C.Slides.remove(matcher);\n\n    return this;\n  };\n\n  _proto.is = function is(type) {\n    return this._o.type === type;\n  };\n\n  _proto.refresh = function refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  };\n\n  _proto.destroy = function destroy(completely) {\n    if (completely === void 0) {\n      completely = true;\n    }\n\n    var event = this.event,\n        state = this.state;\n\n    if (state.is(CREATED)) {\n      EventInterface(this).on(EVENT_READY, this.destroy.bind(this, completely));\n    } else {\n      forOwn(this._C, function (component) {\n        component.destroy && component.destroy(completely);\n      }, true);\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      completely && empty(this.splides);\n      state.set(DESTROYED);\n    }\n\n    return this;\n  };\n\n  _createClass(_Splide, [{\n    key: \"options\",\n    get: function get() {\n      return this._o;\n    },\n    set: function set(options) {\n      this._C.Media.set(options, true);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._C.Slides.getLength(true);\n    }\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._C.Controller.getIndex();\n    }\n  }]);\n\n  return _Splide;\n}();\n\nvar Splide = _Splide;\nSplide.defaults = {};\nSplide.STATES = STATES;\nvar CLASS_RENDERED = \"is-rendered\";\nvar RENDERER_DEFAULT_CONFIG = {\n  listTag: \"ul\",\n  slideTag: \"li\"\n};\n\nvar Style = /*#__PURE__*/function () {\n  function Style(id, options) {\n    this.styles = {};\n    this.id = id;\n    this.options = options;\n  }\n\n  var _proto2 = Style.prototype;\n\n  _proto2.rule = function rule(selector, prop, value, breakpoint) {\n    breakpoint = breakpoint || \"default\";\n    var selectors = this.styles[breakpoint] = this.styles[breakpoint] || {};\n    var styles = selectors[selector] = selectors[selector] || {};\n    styles[prop] = value;\n  };\n\n  _proto2.build = function build() {\n    var _this2 = this;\n\n    var css = \"\";\n\n    if (this.styles.default) {\n      css += this.buildSelectors(this.styles.default);\n    }\n\n    Object.keys(this.styles).sort(function (n, m) {\n      return _this2.options.mediaQuery === \"min\" ? +n - +m : +m - +n;\n    }).forEach(function (breakpoint) {\n      if (breakpoint !== \"default\") {\n        css += \"@media screen and (max-width: \" + breakpoint + \"px) {\";\n        css += _this2.buildSelectors(_this2.styles[breakpoint]);\n        css += \"}\";\n      }\n    });\n    return css;\n  };\n\n  _proto2.buildSelectors = function buildSelectors(selectors) {\n    var _this3 = this;\n\n    var css = \"\";\n    forOwn(selectors, function (styles, selector) {\n      selector = (\"#\" + _this3.id + \" \" + selector).trim();\n      css += selector + \" {\";\n      forOwn(styles, function (value, prop) {\n        if (value || value === 0) {\n          css += prop + \": \" + value + \";\";\n        }\n      });\n      css += \"}\";\n    });\n    return css;\n  };\n\n  return Style;\n}();\n\nvar SplideRenderer = /*#__PURE__*/function () {\n  function SplideRenderer(contents, options, config, defaults) {\n    this.slides = [];\n    this.options = {};\n    this.breakpoints = [];\n    merge(DEFAULTS, defaults || {});\n    merge(merge(this.options, DEFAULTS), options || {});\n    this.contents = contents;\n    this.config = assign({}, RENDERER_DEFAULT_CONFIG, config || {});\n    this.id = this.config.id || uniqueId(\"splide\");\n    this.Style = new Style(this.id, this.options);\n    this.Direction = Direction(null, null, this.options);\n    assert(this.contents.length, \"Provide at least 1 content.\");\n    this.init();\n  }\n\n  SplideRenderer.clean = function clean(splide) {\n    var _EventInterface17 = EventInterface(splide),\n        on = _EventInterface17.on;\n\n    var root = splide.root;\n    var clones = queryAll(root, \".\" + CLASS_CLONE);\n    on(EVENT_MOUNTED, function () {\n      remove(child(root, \"style\"));\n    });\n    remove(clones);\n  };\n\n  var _proto3 = SplideRenderer.prototype;\n\n  _proto3.init = function init() {\n    this.parseBreakpoints();\n    this.initSlides();\n    this.registerRootStyles();\n    this.registerTrackStyles();\n    this.registerSlideStyles();\n    this.registerListStyles();\n  };\n\n  _proto3.initSlides = function initSlides() {\n    var _this4 = this;\n\n    push(this.slides, this.contents.map(function (content, index) {\n      content = isString(content) ? {\n        html: content\n      } : content;\n      content.styles = content.styles || {};\n      content.attrs = content.attrs || {};\n\n      _this4.cover(content);\n\n      var classes = _this4.options.classes.slide + \" \" + (index === 0 ? CLASS_ACTIVE : \"\");\n      assign(content.attrs, {\n        class: (classes + \" \" + (content.attrs.class || \"\")).trim(),\n        style: _this4.buildStyles(content.styles)\n      });\n      return content;\n    }));\n\n    if (this.isLoop()) {\n      this.generateClones(this.slides);\n    }\n  };\n\n  _proto3.registerRootStyles = function registerRootStyles() {\n    var _this5 = this;\n\n    this.breakpoints.forEach(function (_ref2) {\n      var width = _ref2[0],\n          options = _ref2[1];\n\n      _this5.Style.rule(\" \", \"max-width\", unit(options.width), width);\n    });\n  };\n\n  _proto3.registerTrackStyles = function registerTrackStyles() {\n    var _this6 = this;\n\n    var Style2 = this.Style;\n    var selector = \".\" + CLASS_TRACK;\n    this.breakpoints.forEach(function (_ref3) {\n      var width = _ref3[0],\n          options = _ref3[1];\n      Style2.rule(selector, _this6.resolve(\"paddingLeft\"), _this6.cssPadding(options, false), width);\n      Style2.rule(selector, _this6.resolve(\"paddingRight\"), _this6.cssPadding(options, true), width);\n      Style2.rule(selector, \"height\", _this6.cssTrackHeight(options), width);\n    });\n  };\n\n  _proto3.registerListStyles = function registerListStyles() {\n    var _this7 = this;\n\n    var Style2 = this.Style;\n    var selector = \".\" + CLASS_LIST;\n    this.breakpoints.forEach(function (_ref4) {\n      var width = _ref4[0],\n          options = _ref4[1];\n      Style2.rule(selector, \"transform\", _this7.buildTranslate(options), width);\n\n      if (!_this7.cssSlideHeight(options)) {\n        Style2.rule(selector, \"aspect-ratio\", _this7.cssAspectRatio(options), width);\n      }\n    });\n  };\n\n  _proto3.registerSlideStyles = function registerSlideStyles() {\n    var _this8 = this;\n\n    var Style2 = this.Style;\n    var selector = \".\" + CLASS_SLIDE;\n    this.breakpoints.forEach(function (_ref5) {\n      var width = _ref5[0],\n          options = _ref5[1];\n      Style2.rule(selector, \"width\", _this8.cssSlideWidth(options), width);\n      Style2.rule(selector, \"height\", _this8.cssSlideHeight(options) || \"100%\", width);\n      Style2.rule(selector, _this8.resolve(\"marginRight\"), unit(options.gap) || \"0px\", width);\n      Style2.rule(selector + \" > img\", \"display\", options.cover ? \"none\" : \"inline\", width);\n    });\n  };\n\n  _proto3.buildTranslate = function buildTranslate(options) {\n    var _this$Direction = this.Direction,\n        resolve = _this$Direction.resolve,\n        orient = _this$Direction.orient;\n    var values = [];\n    values.push(this.cssOffsetClones(options));\n    values.push(this.cssOffsetGaps(options));\n\n    if (this.isCenter(options)) {\n      values.push(this.buildCssValue(orient(-50), \"%\"));\n      values.push.apply(values, this.cssOffsetCenter(options));\n    }\n\n    return values.filter(Boolean).map(function (value) {\n      return \"translate\" + resolve(\"X\") + \"(\" + value + \")\";\n    }).join(\" \");\n  };\n\n  _proto3.cssOffsetClones = function cssOffsetClones(options) {\n    var _this$Direction2 = this.Direction,\n        resolve = _this$Direction2.resolve,\n        orient = _this$Direction2.orient;\n    var cloneCount = this.getCloneCount();\n\n    if (this.isFixedWidth(options)) {\n      var _this$parseCssValue = this.parseCssValue(options[resolve(\"fixedWidth\")]),\n          value = _this$parseCssValue.value,\n          unit2 = _this$parseCssValue.unit;\n\n      return this.buildCssValue(orient(value) * cloneCount, unit2);\n    }\n\n    var percent = 100 * cloneCount / options.perPage;\n    return orient(percent) + \"%\";\n  };\n\n  _proto3.cssOffsetCenter = function cssOffsetCenter(options) {\n    var _this$Direction3 = this.Direction,\n        resolve = _this$Direction3.resolve,\n        orient = _this$Direction3.orient;\n\n    if (this.isFixedWidth(options)) {\n      var _this$parseCssValue2 = this.parseCssValue(options[resolve(\"fixedWidth\")]),\n          value = _this$parseCssValue2.value,\n          unit2 = _this$parseCssValue2.unit;\n\n      return [this.buildCssValue(orient(value / 2), unit2)];\n    }\n\n    var values = [];\n    var perPage = options.perPage,\n        gap = options.gap;\n    values.push(orient(50 / perPage) + \"%\");\n\n    if (gap) {\n      var _this$parseCssValue3 = this.parseCssValue(gap),\n          _value = _this$parseCssValue3.value,\n          _unit = _this$parseCssValue3.unit;\n\n      var gapOffset = (_value / perPage - _value) / 2;\n      values.push(this.buildCssValue(orient(gapOffset), _unit));\n    }\n\n    return values;\n  };\n\n  _proto3.cssOffsetGaps = function cssOffsetGaps(options) {\n    var cloneCount = this.getCloneCount();\n\n    if (cloneCount && options.gap) {\n      var orient = this.Direction.orient;\n\n      var _this$parseCssValue4 = this.parseCssValue(options.gap),\n          value = _this$parseCssValue4.value,\n          unit2 = _this$parseCssValue4.unit;\n\n      if (this.isFixedWidth(options)) {\n        return this.buildCssValue(orient(value * cloneCount), unit2);\n      }\n\n      var perPage = options.perPage;\n      var gaps = cloneCount / perPage;\n      return this.buildCssValue(orient(gaps * value), unit2);\n    }\n\n    return \"\";\n  };\n\n  _proto3.resolve = function resolve(prop) {\n    return camelToKebab(this.Direction.resolve(prop));\n  };\n\n  _proto3.cssPadding = function cssPadding(options, right) {\n    var padding = options.padding;\n    var prop = this.Direction.resolve(right ? \"right\" : \"left\", true);\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  };\n\n  _proto3.cssTrackHeight = function cssTrackHeight(options) {\n    var height = \"\";\n\n    if (this.isVertical()) {\n      height = this.cssHeight(options);\n      assert(height, '\"height\" is missing.');\n      height = \"calc(\" + height + \" - \" + this.cssPadding(options, false) + \" - \" + this.cssPadding(options, true) + \")\";\n    }\n\n    return height;\n  };\n\n  _proto3.cssHeight = function cssHeight(options) {\n    return unit(options.height);\n  };\n\n  _proto3.cssSlideWidth = function cssSlideWidth(options) {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (this.isVertical() ? \"\" : this.cssSlideSize(options));\n  };\n\n  _proto3.cssSlideHeight = function cssSlideHeight(options) {\n    return unit(options.fixedHeight) || (this.isVertical() ? options.autoHeight ? \"\" : this.cssSlideSize(options) : this.cssHeight(options));\n  };\n\n  _proto3.cssSlideSize = function cssSlideSize(options) {\n    var gap = unit(options.gap);\n    return \"calc((100%\" + (gap && \" + \" + gap) + \")/\" + (options.perPage || 1) + (gap && \" - \" + gap) + \")\";\n  };\n\n  _proto3.cssAspectRatio = function cssAspectRatio(options) {\n    var heightRatio = options.heightRatio;\n    return heightRatio ? \"\" + 1 / heightRatio : \"\";\n  };\n\n  _proto3.buildCssValue = function buildCssValue(value, unit2) {\n    return \"\" + value + unit2;\n  };\n\n  _proto3.parseCssValue = function parseCssValue(value) {\n    if (isString(value)) {\n      var number = parseFloat(value) || 0;\n      var unit2 = value.replace(/\\d*(\\.\\d*)?/, \"\") || \"px\";\n      return {\n        value: number,\n        unit: unit2\n      };\n    }\n\n    return {\n      value: value,\n      unit: \"px\"\n    };\n  };\n\n  _proto3.parseBreakpoints = function parseBreakpoints() {\n    var _this9 = this;\n\n    var breakpoints = this.options.breakpoints;\n    this.breakpoints.push([\"default\", this.options]);\n\n    if (breakpoints) {\n      forOwn(breakpoints, function (options, width) {\n        _this9.breakpoints.push([width, merge(merge({}, _this9.options), options)]);\n      });\n    }\n  };\n\n  _proto3.isFixedWidth = function isFixedWidth(options) {\n    return !!options[this.Direction.resolve(\"fixedWidth\")];\n  };\n\n  _proto3.isLoop = function isLoop() {\n    return this.options.type === LOOP;\n  };\n\n  _proto3.isCenter = function isCenter(options) {\n    if (options.focus === \"center\") {\n      if (this.isLoop()) {\n        return true;\n      }\n\n      if (this.options.type === SLIDE) {\n        return !this.options.trimSpace;\n      }\n    }\n\n    return false;\n  };\n\n  _proto3.isVertical = function isVertical() {\n    return this.options.direction === TTB;\n  };\n\n  _proto3.buildClasses = function buildClasses() {\n    var options = this.options;\n    return [CLASS_ROOT, CLASS_ROOT + \"--\" + options.type, CLASS_ROOT + \"--\" + options.direction, options.drag && CLASS_ROOT + \"--draggable\", options.isNavigation && CLASS_ROOT + \"--nav\", CLASS_ACTIVE, !this.config.hidden && CLASS_RENDERED].filter(Boolean).join(\" \");\n  };\n\n  _proto3.buildAttrs = function buildAttrs(attrs) {\n    var attr = \"\";\n    forOwn(attrs, function (value, key) {\n      attr += value ? \" \" + camelToKebab(key) + \"=\\\"\" + value + \"\\\"\" : \"\";\n    });\n    return attr.trim();\n  };\n\n  _proto3.buildStyles = function buildStyles(styles) {\n    var style = \"\";\n    forOwn(styles, function (value, key) {\n      style += \" \" + camelToKebab(key) + \":\" + value + \";\";\n    });\n    return style.trim();\n  };\n\n  _proto3.renderSlides = function renderSlides() {\n    var _this10 = this;\n\n    var tag = this.config.slideTag;\n    return this.slides.map(function (content) {\n      return \"<\" + tag + \" \" + _this10.buildAttrs(content.attrs) + \">\" + (content.html || \"\") + \"</\" + tag + \">\";\n    }).join(\"\");\n  };\n\n  _proto3.cover = function cover(content) {\n    var styles = content.styles,\n        _content$html = content.html,\n        html = _content$html === void 0 ? \"\" : _content$html;\n\n    if (this.options.cover && !this.options.lazyLoad) {\n      var src = html.match(/<img.*?src\\s*=\\s*(['\"])(.+?)\\1.*?>/);\n\n      if (src && src[2]) {\n        styles.background = \"center/cover no-repeat url('\" + src[2] + \"')\";\n      }\n    }\n  };\n\n  _proto3.generateClones = function generateClones(contents) {\n    var classes = this.options.classes;\n    var count = this.getCloneCount();\n    var slides = contents.slice();\n\n    while (slides.length < count) {\n      push(slides, slides);\n    }\n\n    push(slides.slice(-count).reverse(), slides.slice(0, count)).forEach(function (content, index) {\n      var attrs = assign({}, content.attrs, {\n        class: content.attrs.class + \" \" + classes.clone\n      });\n      var clone = assign({}, content, {\n        attrs: attrs\n      });\n      index < count ? contents.unshift(clone) : contents.push(clone);\n    });\n  };\n\n  _proto3.getCloneCount = function getCloneCount() {\n    if (this.isLoop()) {\n      var options = this.options;\n\n      if (options.clones) {\n        return options.clones;\n      }\n\n      var perPage = max.apply(void 0, this.breakpoints.map(function (_ref6) {\n        var options2 = _ref6[1];\n        return options2.perPage;\n      }));\n      return perPage * ((options.flickMaxPages || 1) + 1);\n    }\n\n    return 0;\n  };\n\n  _proto3.renderArrows = function renderArrows() {\n    var html = \"\";\n    html += \"<div class=\\\"\" + this.options.classes.arrows + \"\\\">\";\n    html += this.renderArrow(true);\n    html += this.renderArrow(false);\n    html += \"</div>\";\n    return html;\n  };\n\n  _proto3.renderArrow = function renderArrow(prev) {\n    var _this$options = this.options,\n        classes = _this$options.classes,\n        i18n = _this$options.i18n;\n    var attrs = {\n      class: classes.arrow + \" \" + (prev ? classes.prev : classes.next),\n      type: \"button\",\n      ariaLabel: prev ? i18n.prev : i18n.next\n    };\n    return \"<button \" + this.buildAttrs(attrs) + \"><svg xmlns=\\\"\" + XML_NAME_SPACE + \"\\\" viewBox=\\\"0 0 \" + SIZE + \" \" + SIZE + \"\\\" width=\\\"\" + SIZE + \"\\\" height=\\\"\" + SIZE + \"\\\"><path d=\\\"\" + (this.options.arrowPath || PATH) + \"\\\" /></svg></button>\";\n  };\n\n  _proto3.html = function html() {\n    var _this$config = this.config,\n        rootClass = _this$config.rootClass,\n        listTag = _this$config.listTag,\n        arrows = _this$config.arrows,\n        beforeTrack = _this$config.beforeTrack,\n        afterTrack = _this$config.afterTrack,\n        slider = _this$config.slider,\n        beforeSlider = _this$config.beforeSlider,\n        afterSlider = _this$config.afterSlider;\n    var html = \"\";\n    html += \"<div id=\\\"\" + this.id + \"\\\" class=\\\"\" + this.buildClasses() + \" \" + (rootClass || \"\") + \"\\\">\";\n    html += \"<style>\" + this.Style.build() + \"</style>\";\n\n    if (slider) {\n      html += beforeSlider || \"\";\n      html += \"<div class=\\\"splide__slider\\\">\";\n    }\n\n    html += beforeTrack || \"\";\n\n    if (arrows) {\n      html += this.renderArrows();\n    }\n\n    html += \"<div class=\\\"splide__track\\\">\";\n    html += \"<\" + listTag + \" class=\\\"splide__list\\\">\";\n    html += this.renderSlides();\n    html += \"</\" + listTag + \">\";\n    html += \"</div>\";\n    html += afterTrack || \"\";\n\n    if (slider) {\n      html += \"</div>\";\n      html += afterSlider || \"\";\n    }\n\n    html += \"</div>\";\n    return html;\n  };\n\n  return SplideRenderer;\n}();\n\nexport { CLASSES, CLASS_ACTIVE, CLASS_ARROW, CLASS_ARROWS, CLASS_ARROW_NEXT, CLASS_ARROW_PREV, CLASS_CLONE, CLASS_CONTAINER, CLASS_FOCUS_IN, CLASS_INITIALIZED, CLASS_LIST, CLASS_LOADING, CLASS_NEXT, CLASS_PAGINATION, CLASS_PAGINATION_PAGE, CLASS_PREV, CLASS_PROGRESS, CLASS_PROGRESS_BAR, CLASS_ROOT, CLASS_SLIDE, CLASS_SPINNER, CLASS_SR, CLASS_TOGGLE, CLASS_TOGGLE_PAUSE, CLASS_TOGGLE_PLAY, CLASS_TRACK, CLASS_VISIBLE, DEFAULTS, EVENT_ACTIVE, EVENT_ARROWS_MOUNTED, EVENT_ARROWS_UPDATED, EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_AUTOPLAY_PLAYING, EVENT_CLICK, EVENT_DESTROY, EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_HIDDEN, EVENT_INACTIVE, EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_MOVE, EVENT_MOVED, EVENT_NAVIGATION_MOUNTED, EVENT_PAGINATION_MOUNTED, EVENT_PAGINATION_UPDATED, EVENT_READY, EVENT_REFRESH, EVENT_RESIZE, EVENT_RESIZED, EVENT_SCROLL, EVENT_SCROLLED, EVENT_SHIFTED, EVENT_SLIDE_KEYDOWN, EVENT_UPDATED, EVENT_VISIBLE, EventBinder, EventInterface, FADE, LOOP, LTR, RTL, RequestInterval, SLIDE, STATUS_CLASSES, Splide, SplideRenderer, State, TTB, Throttle, Splide as default };\n","// todo: import { min, raf } from '../../utils';\n\nexport function raf( func: FrameRequestCallback ): number {\n   return requestAnimationFrame( func );\n}\n \n/**\n * The interface for the returning value of the RequestInterval.\n *\n * @since 3.0.0\n */\nexport interface RequestIntervalInterface {\n  start( resume?: boolean ): void;\n  pause(): void;\n  rewind(): void;\n  cancel(): void;\n  set( interval: number ): void;\n  isPaused(): boolean;\n}\n\n/**\n * Requests interval like the native `setInterval()` with using `requestAnimationFrame`.\n *\n * @since 3.0.0\n *\n * @param interval   - The interval duration in milliseconds.\n * @param onInterval - The callback fired on every interval.\n * @param onUpdate   - Optional. Called on every animation frame, taking the progress rate.\n * @param limit      - Optional. Limits the number of interval.\n */\nexport function CustomRequestInterval(\n  interval: number,\n  onInterval: () => void,\n  onUpdate?: ( rate: number ) => void,\n  limit?: number\n): RequestIntervalInterface {\n  const { now } = Date;\n\n  /**\n   * The time when the interval starts.\n   */\n  let startTime: number;\n\n  /**\n   * The current progress rate.\n   */\n  let rate = 0;\n\n  /**\n   * The animation frame ID.\n   */\n  let id: number;\n\n  /**\n   * Indicates whether the interval is currently paused or not.\n   */\n  let paused = true;\n\n  /**\n   * The loop count. This only works when the `limit` argument is provided.\n   */\n   let count = 0;\n\n   // todo:\n   let targetFPS = 60\n   \n   let targetFrameTime = 1000 / targetFPS // Target time between frames in ms\n   \n   let accumulatedTime = 0\n   \n   let lastTime = 0\n   \n   let running = false\n   \n   /**\n    * The buffer start function.\n    */\n   function bufferStart(updateFn: { (): void; (arg0: number): void; }) { //todo: type\n      if (running) return\n      running = true\n      lastTime = performance.now()\n\n      const animate = (currentTime: number) => {\n         if (!running) return\n\n         // Calculate elapsed time since last frame\n         const deltaTime = currentTime - lastTime\n         lastTime = currentTime\n\n         // Add to accumulated time\n         accumulatedTime += deltaTime\n\n         // Update as many times as needed to catch up\n         while (accumulatedTime >= targetFrameTime) {\n            updateFn(targetFrameTime)\n            accumulatedTime -= targetFrameTime\n         }\n\n         id = raf(animate)\n      }\n\n      id = raf(animate)\n   }\n\n  /**\n   * The update function called on every animation frame.\n   */\n  function update(): void {\n    if ( ! paused ) {\n      rate = interval ? Math.min( ( now() - startTime ) / interval, 1 ) : 1;\n      onUpdate && onUpdate( rate );\n\n      if ( rate >= 1 ) {\n        onInterval();\n        startTime = now();\n\n        if ( limit && ++count >= limit ) {\n          return pause();\n        }\n      }\n\n      // todo: id = raf( update );\n    }\n  }\n\n  /**\n   * Starts the interval.\n   *\n   * @param resume - Optional. Whether to resume the paused progress or not.\n   */\n  function start( resume?: boolean ): void {\n    resume || cancel();\n    startTime = now() - ( resume ? rate * interval : 0 );\n    paused    = false;\n   // todo:  id        = raf( update );\n     \n   bufferStart(update)\n  }\n\n  /**\n   * Pauses the interval.\n   */\n  function pause(): void {\n    paused = true;\n  }\n\n  /**\n   * Rewinds the current progress.\n   */\n  function rewind(): void {\n    startTime = now();\n    rate      = 0;\n\n    if ( onUpdate ) {\n      onUpdate( rate );\n    }\n  }\n\n  /**\n   * Cancels the interval.\n   */\n  function cancel() {\n    id && cancelAnimationFrame( id );\n    rate   = 0;\n    id     = 0;\n    paused = true;\n  }\n\n  /**\n   * Sets new interval duration.\n   *\n   * @param time - The interval duration in milliseconds.\n   */\n  function set( time: number ): void {\n    interval = time;\n  }\n\n  /**\n   * Checks if the interval is paused or not.\n   *\n   * @return `true` if the interval is paused, or otherwise `false`.\n   */\n  function isPaused(): boolean {\n    return paused;\n  }\n\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    set,\n    isPaused,\n  };\n}\n","function empty(array) {\n  array.length = 0;\n}\n\nfunction slice(arrayLike, start, end) {\n  return Array.prototype.slice.call(arrayLike, start, end);\n}\n\nfunction find(arrayLike, predicate) {\n  return slice(arrayLike).filter(predicate)[0];\n}\n\nfunction apply(func) {\n  return func.bind(null, ...slice(arguments, 1));\n}\n\nconst nextTick = setTimeout;\n\nconst noop = () => {\n};\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n\nfunction typeOf(type, subject) {\n  return typeof subject === type;\n}\nfunction isObject(subject) {\n  return !isNull(subject) && typeOf(\"object\", subject);\n}\nconst isArray = Array.isArray;\nconst isFunction = apply(typeOf, \"function\");\nconst isString = apply(typeOf, \"string\");\nconst isUndefined = apply(typeOf, \"undefined\");\nfunction isNull(subject) {\n  return subject === null;\n}\nfunction isHTMLElement(subject) {\n  return subject instanceof HTMLElement;\n}\nfunction isHTMLButtonElement(subject) {\n  return subject instanceof HTMLButtonElement;\n}\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n\nfunction push(array, items) {\n  array.push(...toArray(items));\n  return array;\n}\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, (name) => {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n\nfunction before(nodes, ref) {\n  forEach(nodes, (node) => {\n    const parent = (ref || node).parentNode;\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n\nfunction matches(elm, selector) {\n  return isHTMLElement(elm) && (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\n\nfunction children(parent, selector) {\n  const children2 = parent ? slice(parent.children) : [];\n  return selector ? children2.filter((child) => matches(child, selector)) : children2;\n}\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n\nconst ownKeys = Object.keys;\n\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    let keys = ownKeys(object);\n    keys = right ? keys.reverse() : keys;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key !== \"__proto__\") {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n  return object;\n}\n\nfunction assign(object) {\n  slice(arguments, 1).forEach((source) => {\n    forOwn(source, (value, key) => {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n\nfunction merge(object) {\n  slice(arguments, 1).forEach((source) => {\n    forOwn(source, (value, key) => {\n      if (isArray(value)) {\n        object[key] = value.slice();\n      } else if (isObject(value)) {\n        object[key] = merge({}, isObject(object[key]) ? object[key] : {}, value);\n      } else {\n        object[key] = value;\n      }\n    });\n  });\n  return object;\n}\n\nfunction omit(object, keys) {\n  toArray(keys || ownKeys(object)).forEach((key) => {\n    delete object[key];\n  });\n}\n\nfunction removeAttribute(elms, attrs) {\n  forEach(elms, (elm) => {\n    forEach(attrs, (attr) => {\n      elm && elm.removeAttribute(attr);\n    });\n  });\n}\n\nfunction setAttribute(elms, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, (value2, name) => {\n      setAttribute(elms, name, value2);\n    });\n  } else {\n    forEach(elms, (elm) => {\n      isNull(value) || value === \"\" ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n    });\n  }\n}\n\nfunction create(tag, attrs, parent) {\n  const elm = document.createElement(tag);\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n  parent && append(parent, elm);\n  return elm;\n}\n\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n  if (!isNull(value)) {\n    elm.style[prop] = `${value}`;\n  }\n}\n\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\n\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n}\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n\nfunction remove(nodes) {\n  forEach(nodes, (node) => {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n\nfunction measure(parent, value) {\n  if (isString(value)) {\n    const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n    value = rect(div).width;\n    remove(div);\n  }\n  return value;\n}\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n\nfunction queryAll(parent, selector) {\n  return selector ? slice(parent.querySelectorAll(selector)) : [];\n}\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n\nfunction timeOf(e) {\n  return e.timeStamp;\n}\n\nfunction unit(value) {\n  return isString(value) ? value : value ? `${value}px` : \"\";\n}\n\nconst PROJECT_CODE = \"splide\";\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(`[${PROJECT_CODE}] ${message || \"\"}`);\n  }\n}\n\nfunction error(message) {\n  console.error(`[${PROJECT_CODE}] ${message}`);\n}\n\nconst { min, max, floor, ceil, abs } = Math;\n\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\n\nfunction between(number, minOrMax, maxOrMin, exclusive) {\n  const minimum = min(minOrMax, maxOrMin);\n  const maximum = max(minOrMax, maxOrMin);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\n\nfunction clamp(number, x, y) {\n  const minimum = min(x, y);\n  const maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nfunction camelToKebab(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nfunction format(string, replacements) {\n  forEach(replacements, (replacement) => {\n    string = string.replace(\"%s\", `${replacement}`);\n  });\n  return string;\n}\n\nfunction pad(number) {\n  return number < 10 ? `0${number}` : `${number}`;\n}\n\nconst ids = {};\nfunction uniqueId(prefix) {\n  return `${prefix}${pad(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n}\n\nexport { abs, addClass, append, apply, approximatelyEqual, assert, assign, before, between, camelToKebab, ceil, child, children, clamp, create, display, empty, error, find, floor, focus, forEach, forOwn, format, getAttribute, hasClass, includes, isArray, isFunction, isHTMLButtonElement, isHTMLElement, isNull, isObject, isString, isUndefined, matches, max, measure, merge, min, nextTick, noop, omit, ownKeys, pad, parseHtml, prevent, push, query, queryAll, raf, rect, remove, removeAttribute, removeClass, setAttribute, sign, slice, style, timeOf, toArray, toggleClass, uniqueId, unit };\n","import { AutoScrollOptions } from '../types/options';\n\n\n/**\n * Default options for the AutoScroll extension.\n *\n * @since 0.1.0\n */\nexport const DEFAULTS: AutoScrollOptions = {\n  speed       : 1,\n  autoStart   : true,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n};","export const I18N = {\n  startScroll: 'Start auto scroll',\n  pauseScroll: 'Pause auto scroll',\n};","import {\n  BaseComponent,\n  CLASS_ACTIVE,\n  Components,\n  EVENT_DRAG, EVENT_DRAGGED,\n  EVENT_MOVE,\n  EVENT_MOVED,\n  EVENT_SCROLL,\n  EVENT_SCROLLED,\n  EVENT_UPDATED,\n  EventInterface,\n  FADE,\n  Options,\n  // RequestInterval,\n  Throttle,\n  // RequestIntervalInterface,\n  SLIDE,\n  Splide,\n} from '@splidejs/splide';\nimport { CustomRequestInterval, RequestIntervalInterface } from './CustomRequestInterval';\nimport { assign, clamp, isObject, isUndefined, setAttribute, toggleClass } from '@splidejs/splide/src/js/utils';\nimport { DEFAULTS } from '../../constants/defaults';\nimport { AutoScrollOptions } from '../../types/options';\nimport { I18N } from \"../../constants/i18n\";\n\n\n/**\n * Lets the compiler know this component.\n */\ndeclare module '@splidejs/splide' {\n  interface Options {\n    autoScroll?: AutoScrollOptions | boolean;\n  }\n\n  interface Components {\n    AutoScroll?: AutoScrollComponent;\n  }\n}\n\n/**\n * The interface for the AutoScroll component.\n *\n * @since 0.1.0\n */\nexport interface AutoScrollComponent extends BaseComponent {\n  play(): void;\n  pause(): void;\n  isPaused(): boolean;\n}\n\n/**\n * The extension for continuously scrolling the slider.\n *\n * @since 0.1.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An AutoScroll component object.\n */\nexport function AutoScroll( Splide: Splide, Components: Components, options: Options ): AutoScrollComponent {\n  const { on, off, bind, unbind } = EventInterface( Splide );\n  const { translate, getPosition, toIndex, getLimit } = Components.Move;\n  const { setIndex, getIndex } = Components.Controller;\n  const { orient } = Components.Direction;\n  const { toggle } = Components.Elements;\n  const { Live } = Components;\n  const { root } = Splide;\n\n  /**\n   * The throttled function to update arrows.\n   */\n  const throttledUpdateArrows = Throttle( Components.Arrows.update, 500 );\n\n  /**\n   * Keeps the latest options.\n   */\n  let autoScrollOptions: AutoScrollOptions = {};\n\n  /**\n   * The RequestInterval object.\n   */\n  let interval: RequestIntervalInterface;\n\n  /**\n   * Turns into `true` when the auto scroll is manually paused.\n   */\n  let stopped: boolean;\n\n  /**\n   * Indicates whether the mouse cursor is on the slider or not.\n   */\n  let hovered: boolean;\n\n  /**\n   * Indicates whether the slider contains active element or not.\n   */\n  let focused: boolean;\n\n  /**\n   * Indicates whether the slider is currently busy or not.\n   */\n  let busy: boolean;\n\n  /**\n   * Keeps the current position to restore.\n   */\n  let currPosition: number;\n\n  /**\n   * Sets up the component.\n   */\n  function setup(): void {\n    const { autoScroll } = options;\n    autoScrollOptions = assign( {}, DEFAULTS, isObject( autoScroll ) ? autoScroll : {} );\n  }\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    if ( ! Splide.is( FADE ) ) {\n      if ( ! interval && options.autoScroll !== false ) {\n        interval = CustomRequestInterval( 0, move );\n        listen();\n        autoStart();\n      }\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    if ( interval ) {\n      interval.cancel();\n      interval = null;\n\n      currPosition = undefined;\n\n      off( [ EVENT_MOVE, EVENT_DRAG, EVENT_SCROLL, EVENT_MOVED, EVENT_SCROLLED ] );\n      unbind( root, 'mouseenter mouseleave focusin focusout' );\n      unbind( toggle, 'click' );\n    }\n  }\n\n  /**\n   * Listens to some events.\n   */\n  function listen(): void {\n    if ( autoScrollOptions.pauseOnHover ) {\n      bind( root, 'mouseenter mouseleave', e => {\n        hovered = e.type === 'mouseenter';\n        autoToggle();\n      } );\n    }\n\n    if ( autoScrollOptions.pauseOnFocus ) {\n      bind( root, 'focusin focusout', e => {\n        focused = e.type === 'focusin';\n        autoToggle();\n      } );\n    }\n\n    if ( autoScrollOptions.useToggleButton ) {\n      bind( toggle, 'click', () => {\n        stopped ? play() : pause();\n      } );\n    }\n\n    on( EVENT_UPDATED, update );\n\n    on( [ EVENT_MOVE, EVENT_DRAG, EVENT_SCROLL ], () => {\n      busy = true;\n      pause( false );\n    } );\n\n    on( [ EVENT_MOVED, EVENT_DRAGGED, EVENT_SCROLLED ], () => {\n      busy = false;\n      autoToggle();\n    } );\n  }\n\n  /**\n   * Called when the slider is updated.\n   * Attempts to keep continuous scrolling with the current position\n   * since the update event makes the slider jump to the current index.\n   */\n  function update(): void {\n    const { autoScroll } = options;\n\n    if ( autoScroll !== false ) {\n      autoScrollOptions = assign( {}, autoScrollOptions, isObject( autoScroll ) ? autoScroll : {} );\n      mount();\n    } else {\n      destroy();\n    }\n\n    if ( interval && ! isUndefined( currPosition ) ) {\n      translate( currPosition );\n    }\n  }\n\n  /**\n   * Starts scrolling the slider on the proper timing.\n   */\n  function autoStart(): void {\n    if ( autoScrollOptions.autoStart ) {\n      if ( document.readyState === 'complete' ) {\n        play();\n      } else {\n        bind( window, 'load', play );\n      }\n    }\n  }\n\n  /**\n   * Starts auto scroll.\n   */\n  function play(): void {\n    if ( isPaused() ) {\n      interval.start( true );\n      Live.disable( true );\n      focused = hovered = stopped = false;\n      updateButton();\n    }\n  }\n\n  /**\n   * Pauses auto scroll.\n   *\n   * @param stop - Optional. If `true`, auto scroll will never restart without calling `play()`.\n   */\n  function pause( stop = true ): void {\n    if ( ! stopped ) {\n      stopped = stop;\n      updateButton();\n\n      if ( ! isPaused() ) {\n        interval.pause();\n        Live.disable( false );\n      }\n    }\n  }\n\n  /**\n   * Automatically plays or pauses scrolling.\n   */\n  function autoToggle(): void {\n    if ( ! stopped ) {\n      hovered || focused || busy ? pause( false ) : play();\n    }\n  }\n\n  /**\n   * Called on every animation frame while the auto scroll is active.\n   */\n  function move(): void {\n    const position    = getPosition();\n    const destination = computeDestination( position );\n\n    if ( position !== destination ) {\n      translate( destination );\n      updateIndex( ( currPosition = getPosition() ) );\n    } else {\n      pause( false );\n\n      if ( autoScrollOptions.rewind ) {\n        Splide.go( autoScrollOptions.speed > 0 ? 0 : Components.Controller.getEnd() );\n      }\n    }\n\n    throttledUpdateArrows();\n  }\n\n  /**\n   * Returns the position to move.\n   *\n   * @param position - The current position.\n   *\n   * @return A computed destination.\n   */\n  function computeDestination( position: number ): number {\n    const speed = autoScrollOptions.speed || 1;\n    position += orient( speed );\n\n    if ( Splide.is( SLIDE ) ) {\n      position = clamp( position, getLimit( false ), getLimit( true ) );\n    }\n\n    return position;\n  }\n\n  /**\n   * Updates index and notify them to other components.\n   * - Slides: Activity and visibility\n   * - Pagination: Updates the active item\n   * - LazyLoad: Load close images if necessary\n   *\n   * @param position - A current position.\n   */\n  function updateIndex( position: number ): void {\n    const { length } = Splide;\n    const index = ( toIndex( position ) + length ) % length;\n\n    if ( index !== getIndex() ) {\n      setIndex( index );\n      Components.Slides.update();\n      Components.Pagination.update();\n      options.lazyLoad === 'nearby' && Components.LazyLoad.check();\n    }\n  }\n\n  /**\n   * Updates the toggle button status.\n   */\n  function updateButton(): void {\n    if ( toggle ) {\n      const key = stopped ? 'startScroll' : 'pauseScroll';\n      toggleClass( toggle, CLASS_ACTIVE, ! stopped );\n      setAttribute( toggle, 'aria-label', options.i18n[ key ] || I18N[ key ] );\n    }\n  }\n\n  /**\n   * Checks if the auto scroll is paused or not.\n   *\n   * @return `true` if it's paused, or otherwise `false`.\n   */\n  function isPaused(): boolean {\n    return ! interval || interval.isPaused();\n  }\n\n  return {\n    setup,\n    mount,\n    destroy,\n    play,\n    pause,\n    isPaused,\n  };\n}\n","import { AutoScroll } from '../extensions';\n\n\ndeclare global {\n  interface Window {\n    splide: Record<string, any>;\n  }\n}\n\nif ( typeof window !== 'undefined' ) {\n  window.splide = window.splide || {};\n  window.splide.Extensions = window.splide.Extensions || {};\n  window.splide.Extensions.AutoScroll = AutoScroll;\n}\n"],"names":["empty","array","length","slice","slice$1","arrayLike","start","end","Array","prototype","call","apply","apply$1","func","bind","concat","arguments","raf","raf$1","requestAnimationFrame","typeOf","typeOf$1","type","subject","isArray","toArray","toArray$1","value","forEach","forEach$1","values","iteratee","ownKeys","Object","keys","forOwn","forOwn$1","object","right","reverse","i","key","assign","assign$1","source","min","Math","EventBinder","listeners","targets","events","callback","options","forEachEvent","target","event","namespace","isEventTarget","remover","removeEventListener","addEventListener","push","unbind","filter","listener","dispatch","detail","e","bubbles","CustomEvent","document","createEvent","initCustomEvent","dispatchEvent","events2","split","eventNS","fragment","destroy","data","EVENT_MOVE","EVENT_MOVED","EVENT_UPDATED","EVENT_DRAG","EVENT_DRAGGED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EventInterface","Splide2","bus","createDocumentFragment","binder","on","join","emit","off","RequestInterval","interval","onInterval","onUpdate","limit","now","Date","startTime","rate","id","paused","count","update","pause","resume","cancel","rewind","cancelAnimationFrame","set","time","isPaused","Throttle","duration","throttled","CLASS_ACTIVE","SLIDE","FADE","CustomRequestInterval","targetFPS","targetFrameTime","accumulatedTime","lastTime","running","bufferStart","updateFn","performance","animate","currentTime","deltaTime","isObject","isNull","isUndefined","toggleClass","elm","classes","add","name","classList","removeAttribute","elms","attrs","attr","setAttribute","value2","String","max","floor","ceil","abs","clamp","number","x","y","minimum","maximum","DEFAULTS","speed","autoStart","pauseOnHover","pauseOnFocus","I18N","startScroll","pauseScroll","AutoScroll","Splide","Components","_EventInterface","_Components2$Move","Move","translate","getPosition","toIndex","getLimit","_Components2$Controll","Controller","setIndex","getIndex","orient","Direction","toggle","Elements","Live","root","throttledUpdateArrows","Arrows","autoScrollOptions","stopped","hovered","focused","busy","currPosition","setup","autoScroll","mount","is","move","listen","autoToggle","useToggleButton","play","readyState","window","disable","updateButton","stop","position","destination","computeDestination","updateIndex","go","getEnd","index","Slides","Pagination","lazyLoad","LazyLoad","check","i18n","splide","Extensions"],"mappings":"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"}